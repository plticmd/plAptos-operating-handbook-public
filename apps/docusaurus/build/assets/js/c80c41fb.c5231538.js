"use strict";(self.webpackChunkaptos_docs=self.webpackChunkaptos_docs||[]).push([[2724],{61601:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>a});var i=t(63159),o=t(83581);const r={title:"Generate a PFN Identity",slug:"network-identity-fullnode"},s="Generate a PFN Identity",l={id:"nodes/full-node/network-identity-fullnode",title:"Generate a PFN Identity",description:"Validators and VFNs have their identities initialized when first created and their identities are long-lived (immutable).",source:"@site/i18n/ja/docusaurus-plugin-content-docs/current/nodes/full-node/network-identity-fullnode.md",sourceDirName:"nodes/full-node",slug:"/nodes/full-node/network-identity-fullnode",permalink:"/nodes/full-node/network-identity-fullnode",draft:!1,unlisted:!1,editUrl:"https://github.com/aptos-labs/developer-docs/edit/main/apps/docusaurus/docs/nodes/full-node/network-identity-fullnode.md",tags:[],version:"current",lastUpdatedAt:1713276994,formattedLastUpdatedAt:"2024\u5e744\u670816\u65e5",frontMatter:{title:"Generate a PFN Identity",slug:"network-identity-fullnode"},sidebar:"nodeSidebar",previous:{title:"Upgrade your PFN",permalink:"/nodes/full-node/update-fullnode-with-new-devnet-releases"},next:{title:"Customize PFN Networks",permalink:"/nodes/full-node/fullnode-network-connections"}},d={},a=[{value:"Generate a static identity",id:"generate-a-static-identity",level:2},{value:"Using the aptos-core source code",id:"using-the-aptos-core-source-code",level:3},{value:"Using Docker",id:"using-docker",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"generate-a-pfn-identity",children:"Generate a PFN Identity"}),"\n",(0,i.jsx)(n.admonition,{type:"danger",children:(0,i.jsxs)(n.p,{children:["Validators and VFNs have their identities initialized when first created and their identities are long-lived (immutable).\nPFN identities are more ephemeral and can be regenerated on demand. As such, generating an identity using this\nguide ",(0,i.jsx)(n.strong,{children:"should only be done for PFNs"}),", and not for validators or VFNs."]})}),"\n",(0,i.jsx)(n.p,{children:"Public fullnodes (PFNs) will automatically start up with a randomly generated (ephemeral) network identity. This works well for\nregular PFNs. However, you may want to generate and assign a static network identity to your PFN. This is useful when:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"You wish to advertise your PFN as a seed (i.e., for other Aptos PFNs to connect to)."}),"\n",(0,i.jsx)(n.li,{children:"You wish to add your PFN to an allowlist of known identities on an upstream PFN or VFN."}),"\n",(0,i.jsx)(n.li,{children:"You wish to fix the identity of your PFN across restarts and releases so that telemetry and other monitoring tools can track your PFN over time."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"This guide will show you how to generate a static network identity and start your PFN with this identity."}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsxs)(n.p,{children:["Before you proceed, make sure that you already know how to start your local PFN. See ",(0,i.jsx)(n.a,{href:"/nodes/full-node/public-fullnode",children:"Run a PFN"})," for detailed documentation."]})}),"\n",(0,i.jsx)(n.h2,{id:"generate-a-static-identity",children:"Generate a static identity"}),"\n",(0,i.jsxs)(n.p,{children:["To create a static identity for your PFN, you will first need to generate a private and public key pair. You will then\nneed to derive the ",(0,i.jsx)(n.code,{children:"peer_id"})," from the public key, and use the ",(0,i.jsx)(n.code,{children:"peer_id"})," in your configuration file\n(e.g., ",(0,i.jsx)(n.code,{children:"fullnode.yaml"}),") to configure the static network identity for your PFN."]}),"\n",(0,i.jsxs)(n.p,{children:["The steps below will guide you through the process of generating a static identity for your PFN. The exact steps depend\non whether you are using the ",(0,i.jsx)(n.code,{children:"aptos-core"})," source code to run your PFN, or Docker."]}),"\n",(0,i.jsx)(n.h3,{id:"using-the-aptos-core-source-code",children:"Using the aptos-core source code"}),"\n",(0,i.jsxs)(n.p,{children:["If you use the ",(0,i.jsx)(n.code,{children:"aptos-core"})," source code to run your PFN, follow these steps:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Generate the private key"})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["First, use the ",(0,i.jsx)(n.a,{href:"/tools/aptos-cli/use-cli/use-aptos-cli",children:"Aptos CLI"})," (",(0,i.jsx)(n.code,{children:"aptos"}),") to produce a hex encoded static\nx25519 private key. This will be the private key for your network identity. Run the following ",(0,i.jsx)(n.code,{children:"aptos"})," CLI command:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"aptos key generate --key-type x25519 --output-file /path/to/private-key.txt\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This command will create a file ",(0,i.jsx)(n.code,{children:"private-key.txt"})," with the private key in it, and a corresponding\n",(0,i.jsx)(n.code,{children:"private-key.txt.pub"})," file with the public key in it. An example ",(0,i.jsx)(n.code,{children:"private-key.txt"})," file and\n",(0,i.jsx)(n.code,{children:"private-key.txt.pub"})," file are shown below:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cat ~/private-key.txt\nC83110913CBE4583F820FABEB7514293624E46862FAE1FD339B923F0CACC647D%\n\ncat ~/private-key.txt.pub\nB881EA2C174D8211C123E5A91D86227DB116A44BB345A6E66874F83D8993F813%\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Retrieve the peer identity"})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Next, retrieve the peer identity from the public key using the ",(0,i.jsx)(n.code,{children:"aptos"})," CLI. The ",(0,i.jsx)(n.code,{children:"--host"})," flag in\nthe command will provide the host information to output a network address for your PFN. Run the following command\n(be sure to update the ",(0,i.jsx)(n.code,{children:"--host"})," flag with your actual host information):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"aptos key extract-peer --host example.com:6180 \\\n    --public-network-key-file private-key.txt.pub \\\n    --output-file peer-info.yaml\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This command will output the public identity information for your PFN to a file ",(0,i.jsx)(n.code,{children:"peer-info.yaml"}),". For example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "Result": {\n    "B881EA2C174D8211C123E5A91D86227DB116A44BB345A6E66874F83D8993F813": {\n      "addresses": [\n        "/dns/example.com/tcp/6180/noise-ik/0xB881EA2C174D8211C123E5A91D86227DB116A44BB345A6E66874F83D8993F813/handshake/0"\n      ],\n      "keys": [\n        "0xB881EA2C174D8211C123E5A91D86227DB116A44BB345A6E66874F83D8993F813"\n      ],\n      "role": "Upstream"\n    }\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In this example, ",(0,i.jsx)(n.code,{children:"B881EA2C174D8211C123E5A91D86227DB116A44BB345A6E66874F83D8993F813"})," is the ",(0,i.jsx)(n.code,{children:"peer_id"}),"."]}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Start a PFN with the identity"})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["After extracting the peer identity from the public key, you can start your PFN with the identity using the\npublic key in the ",(0,i.jsx)(n.code,{children:"peer_id"})," field of the configuration file (e.g., ",(0,i.jsx)(n.code,{children:"fullnode.yaml"}),"). For example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'full_node_networks:\n  - network_id: "public"\ndiscovery_method: "onchain"\nidentity:\n  type: "from_config"\n  key: "<PRIVATE_KEY>"\n  peer_id: "<PEER_ID>"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In our example (from above), the configuration file (",(0,i.jsx)(n.code,{children:"fullnode.yaml"}),") should now have the following information:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'full_node_networks:\n  - network_id: "public"\n    discovery_method: "onchain"\n    identity:\n      type: "from_config"\n      key: "C83110913CBE4583F820FABEB7514293624E46862FAE1FD339B923F0CACC647D"\n      peer_id: "B881EA2C174D8211C123E5A91D86227DB116A44BB345A6E66874F83D8993F813"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Starting your PFN with this configuration will assign your PFN with the static network identity you generated."}),"\n",(0,i.jsx)(n.h3,{id:"using-docker",children:"Using Docker"}),"\n",(0,i.jsx)(n.p,{children:"If you use Docker to run your PFN, follow these steps:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Prepare your tools"})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["First, ",(0,i.jsx)(n.code,{children:"cd"})," into the directory for your local PFN and start a Docker container with the latest tools, for example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd ~/my-full-node\ndocker run -it aptoslabs/tools:devnet /bin/bash\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Generate the private key"})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Next, follow the remaining steps from inside the ",(0,i.jsx)(n.code,{children:"aptoslabs/tools"})," Docker container."]}),"\n",(0,i.jsxs)(n.p,{children:["Open a new terminal and ",(0,i.jsx)(n.code,{children:"cd"})," into the directory where you started the Docker container for your PFN. Making\nsure to provide the ",(0,i.jsx)(n.strong,{children:"full path"})," to where you want the private key file to be stored, run the command:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"aptos key generate \\\n    --key-type x25519 \\\n    --output-file /path/to/private-key.txt\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Retrieve the peer identity"})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Next, retrieve the peer identity from the public key using the ",(0,i.jsx)(n.code,{children:"aptos"})," CLI. The ",(0,i.jsx)(n.code,{children:"--host"})," flag in\nthe command will provide the host information to output a network address for your PFN. Run the following command\n(be sure to update the ",(0,i.jsx)(n.code,{children:"--host"})," flag with your actual host information):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"aptos key extract-peer --host example.com:6180 \\\n    --public-network-key-file private-key.txt.pub \\\n    --output-file peer-info.yaml\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This command will output the public identity information for your PFN to a file ",(0,i.jsx)(n.code,{children:"peer-info.yaml"}),". For example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "Result": {\n    "B881EA2C174D8211C123E5A91D86227DB116A44BB345A6E66874F83D8993F813": {\n      "addresses": [\n        "/dns/example.com/tcp/6180/noise-ik/0xB881EA2C174D8211C123E5A91D86227DB116A44BB345A6E66874F83D8993F813/handshake/0"\n      ],\n      "keys": [\n        "0xB881EA2C174D8211C123E5A91D86227DB116A44BB345A6E66874F83D8993F813"\n      ],\n      "role": "Upstream"\n    }\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In this example, ",(0,i.jsx)(n.code,{children:"B881EA2C174D8211C123E5A91D86227DB116A44BB345A6E66874F83D8993F813"})," is the ",(0,i.jsx)(n.code,{children:"peer_id"}),"."]}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Start a PFN with the identity"})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["After extracting the peer identity from the public key, you can start your PFN with the identity using the\npublic key in the ",(0,i.jsx)(n.code,{children:"peer_id"})," field of the configuration file (e.g., ",(0,i.jsx)(n.code,{children:"fullnode.yaml"}),"). For example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'full_node_networks:\n  - network_id: "public"\ndiscovery_method: "onchain"\nidentity:\n  type: "from_config"\n  key: "<PRIVATE_KEY>"\n  peer_id: "<PEER_ID>"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In our example (from above), the configuration file (",(0,i.jsx)(n.code,{children:"fullnode.yaml"}),") should now have the following information:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'full_node_networks:\n  - network_id: "public"\n    discovery_method: "onchain"\n    identity:\n      type: "from_config"\n      key: "C83110913CBE4583F820FABEB7514293624E46862FAE1FD339B923F0CACC647D"\n      peer_id: "B881EA2C174D8211C123E5A91D86227DB116A44BB345A6E66874F83D8993F813"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Starting your PFN with this configuration will assign your PFN with the static network identity you generated."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},83581:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var i=t(11855);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);