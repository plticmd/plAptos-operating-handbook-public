"use strict";(self.webpackChunkaptos_docs=self.webpackChunkaptos_docs||[]).push([[5975],{40863:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var o=r(63159),t=r(83581);const i={title:"Node Requirements"},s=void 0,a={id:"nodes/validator-node/operator/node-requirements",title:"Node Requirements",description:"To ensure that your validator and validator fullnode (VFN) operate smoothly, both nodes should meet the",source:"@site/i18n/ja/docusaurus-plugin-content-docs/current/nodes/validator-node/operator/node-requirements.md",sourceDirName:"nodes/validator-node/operator",slug:"/nodes/validator-node/operator/node-requirements",permalink:"/nodes/validator-node/operator/node-requirements",draft:!1,unlisted:!1,editUrl:"https://github.com/aptos-labs/developer-docs/edit/main/apps/docusaurus/docs/nodes/validator-node/operator/node-requirements.md",tags:[],version:"current",lastUpdatedAt:1713276994,formattedLastUpdatedAt:"2024\u5e744\u670816\u65e5",frontMatter:{title:"Node Requirements"},sidebar:"nodeSidebar",previous:{title:"Run a Validator and VFN",permalink:"/nodes/validator-node/validators"},next:{title:"Deploy Nodes",permalink:"/nodes/validator-node/operator/running-validator-node/running-validator-node"}},d={},l=[{value:"Resource isolation",id:"resource-isolation",level:2},{value:"Hardware requirements",id:"hardware-requirements",level:2},{value:"Reference specs",id:"reference-specs",level:3},{value:"Performance benchmarking",id:"performance-benchmarking",level:3},{value:"Motivating hardware requirements",id:"motivating-hardware-requirements",level:3},{value:"Network requirements and ports",id:"network-requirements-and-ports",level:2},{value:"Network types",id:"network-types",level:3},{value:"Port settings",id:"port-settings",level:3},{value:"Running a validator:",id:"running-a-validator",level:4},{value:"Running a VFN:",id:"running-a-vfn",level:4}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"To ensure that your validator and validator fullnode (VFN) operate smoothly, both nodes should meet the\nrequirements specified in this document."}),"\n",(0,o.jsx)(n.admonition,{title:"Failure to meet requirements",type:"danger",children:(0,o.jsx)(n.p,{children:"Failure to meet the requirements outlined in this document will result in your nodes experiencing degradation under load,\nconsensus failures, reward losses, and general instability."})}),"\n",(0,o.jsx)(n.h2,{id:"resource-isolation",children:"Resource isolation"}),"\n",(0,o.jsx)(n.p,{children:"When running an Aptos validator and VFN, we strongly recommend that the nodes run on two separate and\nindependent machines. These machines should be well-provisioned, meet the requirements outlined below and\nbe isolated from each other. Maintaining resource isolation between the validator and the VFN is important\nfor security and to ensure that the nodes do not encounter performance degradation, instability or failures when\nunder load."}),"\n",(0,o.jsx)(n.admonition,{title:"Terraform support",type:"tip",children:(0,o.jsxs)(n.p,{children:["For deploying the validator and VFN in the cloud, we provide Terraform support on two cloud providers: ",(0,o.jsx)(n.strong,{children:"GCP"})," and ",(0,o.jsx)(n.strong,{children:"AWS"}),". See ",(0,o.jsx)(n.a,{href:"/nodes/validator-node/operator/running-validator-node/running-validator-node",children:(0,o.jsx)(n.strong,{children:"Running Validator Node"})}),"."]})}),"\n",(0,o.jsx)(n.h2,{id:"hardware-requirements",children:"Hardware requirements"}),"\n",(0,o.jsx)(n.p,{children:"For running an Aptos validator and VFN in mainnet, we recommend that your hardware be performant enough to maintain\n~30,000 transactions per second (TPS). There are two ways to evaluate if your hardware meets this requirement:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Use the reference specs provided below."}),"\n",(0,o.jsx)(n.li,{children:"Run the performance benchmarking tool provided by Aptos."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Note that both the validator and VFN require sufficient hardware separately (i.e., two separate machines that\nsatisfy the requirements outlined below)."}),"\n",(0,o.jsx)(n.h3,{id:"reference-specs",children:"Reference specs"}),"\n",(0,o.jsx)(n.p,{children:"The reference specs for running an Aptos validator and VFN on mainnet can be seen below:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"CPU"}),": 32 cores, 2.8GHz, or faster, AMD Milan EPYC or Intel(R) Xeon(R) Platinum"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Memory"}),": 64GB RAM."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Storage"}),": 2T SSD with at least 60K IOPS and 200MiB/s bandwidth."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Networking bandwidth"}),": 1Gbps"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Example machine types that meet the reference specs (on various clouds):"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"AWS"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"c6id.16xlarge (if using a local SSD)."}),"\n",(0,o.jsx)(n.li,{children:"c6i.16xlarge + io2 EBS volume with 60K IOPS."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"GCP"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"t2d-standard-60 + pd-ssd with 60K IOPS."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"performance-benchmarking",children:"Performance benchmarking"}),"\n",(0,o.jsxs)(n.p,{children:["If you'd prefer to evaluate your hardware for sufficient performance, you can use the performance benchmarking\ntool. First, clone the ",(0,o.jsx)(n.code,{children:"aptos-core"})," repository and install the required dependencies (see the\n",(0,o.jsx)(n.a,{href:"https://aptos.dev/guides/building-from-source#clone-the-aptos-core-repo",children:(0,o.jsx)(n.strong,{children:"Cloning aptos-core"})})," section).\nThen, execute the following commands to run the benchmark:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"TABULATE_INSTALL=lib-only pip install tabulate\n\n./testsuite/performance_benchmark.sh --short\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Once the benchmark finishes, it will print out a table, with a column ",(0,o.jsx)(n.code,{children:'"t/s"'}),", which shows the TPS achieved by your\nhardware. The evaluation criteria is encoded in the tool, and the tool will display a warning if your hardware does\nnot meet the requirements."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Local SSD vs. network storage"})}),"\n",(0,o.jsx)(n.p,{children:"Cloud deployments require choosing between local storage or network storage, such as, AWS EBS and GCP PD.\nLoosely speaking, a local SSD often provides lower latency and cost, especially relative to IOPS (input/output\noperations per second), while network storage requires CPU support to scale IOPS. However, network\nstorage provides better support for backups and offers improved reliability for nodes that stop or fail, thus enabling\nhigher availability. The choice between local SSD and network storage depends on your specific requirements and\nconstraints."}),"\n",(0,o.jsx)(n.h3,{id:"motivating-hardware-requirements",children:"Motivating hardware requirements"}),"\n",(0,o.jsx)(n.p,{children:"Hardware requirements for Aptos nodes depend on: (i) the transaction workload being executed; and (ii) the size of the\ndatabase on each machine. The current hardware requirements have been set using an estimated transaction workload\n(e.g., 30,000 TPS) and an estimated database growth rate for 2024. These may be subject to change. It is also worth\nnoting that transaction workloads can change frequently, and thus it is necessary to provision your hardware to meet the\nrequirements of the most demanding transaction workloads. This will ensure that your nodes can perform well under\nload and remain stable."}),"\n",(0,o.jsx)(n.p,{children:"Generally, the size of the database on each machine is a function of the ledger history (i.e., the number\nof transactions in the blockchain history) and the number of on-chain states (e.g., accounts and resources).\nBoth the ledger history and the number of on-chain states depend on several additional factors, including the age\nof the blockchain, the average transaction rate over time, and the configuration of the ledger database pruner.\nAt the time of writing, we estimate that testnet and mainnet require several 100's of GB of storage."}),"\n",(0,o.jsx)(n.p,{children:"Note that because archival nodes store the entire history of the blockchain, the database size on archival nodes will\ncontinue to grow unbounded. As a result, we cannot provide a recommendation for archival node storage sizes."}),"\n",(0,o.jsx)(n.h2,{id:"network-requirements-and-ports",children:"Network requirements and ports"}),"\n",(0,o.jsx)(n.p,{children:"When you are running a validator and a VFN, you are required to open network ports on your nodes to allow other\nnodes (i.e., peers) to connect to you. There are different Aptos network types, and each network type uses a different port (see below)."}),"\n",(0,o.jsx)(n.h3,{id:"network-types",children:"Network types"}),"\n",(0,o.jsx)(n.p,{children:"There are three types of Aptos networks:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Validator network:"})," Validators connect to each other over this network. Validator fullnodes (VFNs) and public fullnodes (PFNs) do not use this network."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"VFN network:"})," The validator fullnode (VFN) network allows a validator and VFN pair to connect to each other. This network is private between the validator and the VFN."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Public network:"})," The public network allows VFNs and public fullnodes (PFNs) to connect to other VFNs and PFNs. This allows public node operators to access the blockchain."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Your node can be configured so that each of these networks can operate using a different port on your node. You can configure\nthe port settings using the node configuration YAML file. Here is an ",(0,o.jsx)(n.a,{href:"https://github.com/aptos-labs/aptos-core/blob/4ce85456853c7b19b0a751fb645abd2971cc4c0c/docker/compose/aptos-node/fullnode.yaml#L10",children:"example\nconfiguration file"})," for a VFN node\nthat configures the VFN network to use port ",(0,o.jsx)(n.code,{children:"6181"})," and the public network to use port ",(0,o.jsx)(n.code,{children:"6182"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"port-settings",children:"Port settings"}),"\n",(0,o.jsx)(n.p,{children:"The recommendations described below assume the default port settings used by validators, VFNs and PFNs. If you have\nchanged the default port settings in your configuration file, then you should adjust the recommendations accordingly."}),"\n",(0,o.jsx)(n.admonition,{title:"Exposing ports",type:"caution",children:(0,o.jsx)(n.p,{children:"Unless explicitly required, we recommend that you do not expose any other ports while operating a node. This is because\nexposing additional ports can increase the attack surface of your node and make it more vulnerable to adversaries."})}),"\n",(0,o.jsx)(n.h4,{id:"running-a-validator",children:"Running a validator:"}),"\n",(0,o.jsx)(n.p,{children:"Assuming default ports are used, the following should be configured for validator nodes:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Open the following TCP ports:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"6180"})," - ",(0,o.jsx)(n.strong,{children:"Validator network"}),": Open this port publicly to enable the validator to connect to other validators in the network."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"6181"})," \u2013 ",(0,o.jsx)(n.strong,{children:"VFN network"}),": Open this port privately to only be accessible by your VFN."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["Close the following TCP ports:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"6182"})," \u2013 ",(0,o.jsx)(n.strong,{children:"Public network"}),": Close this port to prevent PFN connections."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"9101"})," \u2013 ",(0,o.jsx)(n.strong,{children:"Inspection service"}),": Close this port to prevent unauthorized metric inspection."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"9102"})," \u2013 ",(0,o.jsx)(n.strong,{children:"Admin service"}),": Close this port to prevent unauthorized admin service interaction."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"80/8080"})," ",(0,o.jsx)(n.strong,{children:"REST API"}),": Close this port to prevent unauthorized REST API access."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"running-a-vfn",children:"Running a VFN:"}),"\n",(0,o.jsx)(n.p,{children:"Assuming default ports are used, the following should be configured for VFN nodes:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Open the following TCP ports:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"6181"})," \u2013 ",(0,o.jsx)(n.strong,{children:"VFN network"}),": Open this port privately to only be accessible by your validator."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"6182"})," \u2013 ",(0,o.jsx)(n.strong,{children:"Public network"}),": Open this port publicly to enable PFNs to connect to your VFN."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["Close the following TCP ports:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"9101"})," \u2013 ",(0,o.jsx)(n.strong,{children:"Inspection service"}),": Close this port to prevent unauthorized metric inspection."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"9102"})," \u2013 ",(0,o.jsx)(n.strong,{children:"Admin service"}),": Close this port to prevent unauthorized admin service interaction."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"80/8080"})," ",(0,o.jsx)(n.strong,{children:"REST API"}),": Close this port to prevent unauthorized REST API access."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{title:"Exposing services",type:"danger",children:(0,o.jsxs)(n.p,{children:["The inspection service port (",(0,o.jsx)(n.code,{children:"9101"}),"), admin service port (",(0,o.jsx)(n.code,{children:"9102"}),") and the REST API port (",(0,o.jsx)(n.code,{children:"80"})," or ",(0,o.jsx)(n.code,{children:"8080"}),")\nare likely useful for your internal network, e.g., application development and debugging. However, the inspection service\nport and the admin service port should never be exposed publicly as they can be easily abused. Similarly, if you choose\nto expose the REST API endpoint publicly, you should deploy an additional authentication or rate-limiting mechanism to\nprevent abuse."]})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},83581:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>a});var o=r(11855);const t={},i=o.createContext(t);function s(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);