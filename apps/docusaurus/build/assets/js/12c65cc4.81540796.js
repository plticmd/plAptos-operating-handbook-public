"use strict";(self.webpackChunkaptos_docs=self.webpackChunkaptos_docs||[]).push([[9088],{74229:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>p,contentTitle:()=>u,default:()=>b,frontMatter:()=>l,metadata:()=>h,toc:()=>m});var a=s(63159),t=s(83581),c=s(3688),i=s(45745),r=s(99156),d=s(41987),o=s(28693);const l={title:"Aptos CLI"},u="Use the Aptos CLI",h={id:"move/move-on-aptos/cli",title:"Aptos CLI",description:"The aptos tool is a command line interface (CLI) for developing on the Aptos blockchain, debugging, and for node operations. This document describes how to use the aptos CLI tool. To download or build the CLI, follow Install Aptos CLI.",source:"@site/i18n/ja/docusaurus-plugin-content-docs/current/move/move-on-aptos/cli.md",sourceDirName:"move/move-on-aptos",slug:"/move/move-on-aptos/cli",permalink:"/move/move-on-aptos/cli",draft:!1,unlisted:!1,editUrl:"https://github.com/aptos-labs/developer-docs/edit/main/apps/docusaurus/docs/move/move-on-aptos/cli.md",tags:[],version:"current",lastUpdatedAt:1713368916,formattedLastUpdatedAt:"2024\u5e744\u670817\u65e5",frontMatter:{title:"Aptos CLI"},sidebar:"appSidebar",previous:{title:"Modules on Aptos",permalink:"/move/move-on-aptos/modules-on-aptos"},next:{title:"Cryptography",permalink:"/move/move-on-aptos/cryptography"}},p={},m=[{value:"Compiling Move",id:"compiling-move",level:2},{value:"Compiling and unit testing Move",id:"compiling-and-unit-testing-move",level:2},{value:"Generating test coverage details for Move",id:"generating-test-coverage-details-for-move",level:2},{value:"Proving Move",id:"proving-move",level:2},{value:"Profiling gas usage",id:"profiling-gas-usage",level:2},{value:"Debugging and printing stack trace",id:"debugging-and-printing-stack-trace",level:2},{value:"Publishing a Move package with a named address",id:"publishing-a-move-package-with-a-named-address",level:2},{value:"Running a Move function",id:"running-a-move-function",level:2},{value:"Arguments in JSON",id:"arguments-in-json",level:2},{value:"Package info",id:"package-info",level:3},{value:"Deploying the package",id:"deploying-the-package",level:3},{value:"Entry functions",id:"entry-functions",level:3},{value:"View functions",id:"view-functions",level:3},{value:"Script functions",id:"script-functions",level:3},{value:"Multisig governance",id:"multisig-governance",level:2},{value:"Background",id:"background",level:3},{value:"Account creation",id:"account-creation",level:3},{value:"Inspect the multisig",id:"inspect-the-multisig",level:3},{value:"Enqueue a publication transaction",id:"enqueue-a-publication-transaction",level:3},{value:"Enqueue a governance parameter transaction",id:"enqueue-a-governance-parameter-transaction",level:3},{value:"Execute the publication transaction",id:"execute-the-publication-transaction",level:3},{value:"Execute the governance parameter transaction",id:"execute-the-governance-parameter-transaction",level:3}];function g(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,t.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"use-the-aptos-cli",children:"Use the Aptos CLI"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"aptos"})," tool is a command line interface (CLI) for developing on the Aptos blockchain, debugging, and for node operations. This document describes how to use the ",(0,a.jsx)(n.code,{children:"aptos"})," CLI tool. To download or build the CLI, follow ",(0,a.jsx)(n.a,{href:"/tools/aptos-cli/install-cli/",children:"Install Aptos CLI"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"compiling-move",children:"Compiling Move"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"aptos"})," CLI can be used to compile a Move package locally.\nThe below example uses the ",(0,a.jsx)(n.code,{children:"HelloBlockchain"})," in ",(0,a.jsx)(n.a,{href:"https://github.com/aptos-labs/aptos-core/tree/main/aptos-move/move-examples",children:"move-examples"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"The named addresses can be either an account address, or a profile name."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ aptos move compile --package-dir aptos-move/move-examples/hello_blockchain/ --named-addresses hello_blockchain=superuser\n"})}),"\n",(0,a.jsx)(n.p,{children:"The above command will generate the below terminal output:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": [\n    "742854F7DCA56EA6309B51E8CEBB830B12623F9C9D76C72C3242E4CAD353DEDC::Message"\n  ]\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"compiling-and-unit-testing-move",children:"Compiling and unit testing Move"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"aptos"})," CLI can also be used to compile and run unit tests locally.\nIn this example, we'll use the ",(0,a.jsx)(n.code,{children:"HelloBlockchain"})," in ",(0,a.jsx)(n.a,{href:"https://github.com/aptos-labs/aptos-core/tree/main/aptos-move/move-examples",children:"move-examples"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ aptos move test --package-dir aptos-move/move-examples/hello_blockchain/ --named-addresses hello_blockchain=superuser\n"})}),"\n",(0,a.jsx)(n.p,{children:"The above command will generate the following terminal output:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'INCLUDING DEPENDENCY AptosFramework\nINCLUDING DEPENDENCY AptosStdlib\nINCLUDING DEPENDENCY MoveStdlib\nBUILDING Examples\nRunning Move unit tests\n[ PASS    ] 0x742854f7dca56ea6309b51e8cebb830b12623f9c9d76c72c3242e4cad353dedc::MessageTests::sender_can_set_message\n[ PASS    ] 0x742854f7dca56ea6309b51e8cebb830b12623f9c9d76c72c3242e4cad353dedc::Message::sender_can_set_message\nTest result: OK. Total tests: 2; passed: 2; failed: 0\n{\n  "Result": "Success"\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"generating-test-coverage-details-for-move",children:"Generating test coverage details for Move"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"aptos"})," CLI can be used to analyze and improve the testing of your Move modules. To use this feature:"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["In your ",(0,a.jsx)(n.code,{children:"aptos-core"})," source checkout, navigate to the ",(0,a.jsx)(n.code,{children:"aptos-move/framework/move-stdlib"})," directory."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Execute the command:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ aptos move test --coverage\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Receive results in standard output containing the result for each test case followed by a basic coverage summary resembling:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'BUILDING MoveStdlib\nRunning Move unit tests\n[ PASS    ] 0x1::vector_tests::append_empties_is_empty\n[ PASS    ] 0x1::option_tests::borrow_mut_none\n[ PASS    ] 0x1::fixed_point32_tests::ceil_can_round_up_correctly\n[ PASS    ] 0x1::features::test_change_feature_txn\n[ PASS    ] 0x1::bcs_tests::bcs_bool\n[ PASS    ] 0x1::bit_vector_tests::empty_bitvector\n[ PASS    ] 0x1::option_tests::borrow_mut_some\nTest result: OK. Total tests: 149; passed: 149; failed: 0\n+-------------------------+\n| Move Coverage Summary   |\n+-------------------------+\nModule 0000000000000000000000000000000000000000000000000000000000000001::bcs\n>>> % Module coverage: NaN\nModule 0000000000000000000000000000000000000000000000000000000000000001::fixed_point32\n>>> % Module coverage: 100.00\nModule 0000000000000000000000000000000000000000000000000000000000000001::hash\n>>> % Module coverage: NaN\nModule 0000000000000000000000000000000000000000000000000000000000000001::vector\n>>> % Module coverage: 92.19\nModule 0000000000000000000000000000000000000000000000000000000000000001::error\n>>> % Module coverage: 0.00\nModule 0000000000000000000000000000000000000000000000000000000000000001::acl\n>>> % Module coverage: 0.00\nModule 0000000000000000000000000000000000000000000000000000000000000001::bit_vector\n>>> % Module coverage: 97.32\nModule 0000000000000000000000000000000000000000000000000000000000000001::signer\n>>> % Module coverage: 100.00\nModule 0000000000000000000000000000000000000000000000000000000000000001::features\n>>> % Module coverage: 69.41\nModule 0000000000000000000000000000000000000000000000000000000000000001::option\n>>> % Module coverage: 100.00\nModule 0000000000000000000000000000000000000000000000000000000000000001::string\n>>> % Module coverage: 81.82\n+-------------------------+\n| % Move Coverage: 83.50  |\n+-------------------------+\nPlease use `aptos move coverage -h` for more detailed test coverage of this package\n{\n  "Result": "Success"\n}\n'})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Optionally, narrow down your test runs and results to a specific package name with the ",(0,a.jsx)(n.code,{children:"--filter"})," option, like so:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ aptos move test --coverage --filter vector\n"})}),"\n",(0,a.jsx)(n.p,{children:"With results like:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"BUILDING MoveStdlib\nRunning Move unit tests\n[ PASS    ] 0x1::bit_vector_tests::empty_bitvector\n[ PASS    ] 0x1::vector_tests::append_empties_is_empty\n[ PASS    ] 0x1::bit_vector_tests::index_bit_out_of_bounds\n[ PASS    ] 0x1::vector_tests::append_respects_order_empty_lhs\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Run the ",(0,a.jsx)(n.code,{children:"aptos move coverage"})," command to obtain more detailed coverage information."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Optionally, isolate the results to a module by passing its name to the ",(0,a.jsx)(n.code,{children:"--module"})," option, for example:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ aptos move coverage source --module signer\n"})}),"\n",(0,a.jsx)(n.p,{children:"With results:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'module std::signer {\n    // Borrows the address of the signer\n    // Conceptually, you can think of the `signer` as being a struct wrapper around an\n    // address\n    // ```\n    // struct signer has drop { addr: address }\n    // ```\n    // `borrow_address` borrows this inner field\n    native public fun borrow_address(s: &signer): &address;\n\n    // Copies the address of the signer\n    public fun address_of(s: &signer): address {\n        *borrow_address(s)\n    }\n\n /// Return true only if `s` is a transaction signer. This is a spec function only available in spec.\n spec native fun is_txn_signer(s: signer): bool;\n\n /// Return true only if `a` is a transaction signer address. This is a spec function only available in spec.\n spec native fun is_txn_signer_addr(a: address): bool;\n}\n{\n  "Result": "Success"\n}\n'})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Find failures and iteratively improve your testing and running these commands to eliminate gaps in your testing coverage."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"proving-move",children:"Proving Move"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"aptos"})," CLI can be used to run ",(0,a.jsx)(n.a,{href:"/move/prover/move-prover",children:"Move Prover"}),", which is a formal verification tool for the Move language. The below example proves the ",(0,a.jsx)(n.code,{children:"hello_prover"})," package in ",(0,a.jsx)(n.a,{href:"https://github.com/aptos-labs/aptos-core/tree/main/aptos-move/move-examples",children:"move-examples"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"aptos move prove --package-dir aptos-move/move-examples/hello_prover/\n"})}),"\n",(0,a.jsx)(n.p,{children:"The above command will generate the following terminal output:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'SUCCESS proving 1 modules from package `hello_prover` in 1.649s\n{\n  "Result": "Success"\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"Move Prover may fail with the following terminal output if the dependencies are not installed and set up properly:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'FAILURE proving 1 modules from package `hello_prover` in 0.067s\n{\n  "Error": "Move Prover failed: No boogie executable set.  Please set BOOGIE_EXE"\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["In this case, see ",(0,a.jsx)(n.a,{href:"/tools/aptos-cli/install-cli/#optional-installing-the-move-prover",children:"Install the dependencies of Move Prover"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"profiling-gas-usage",children:"Profiling gas usage"}),"\n",(0,a.jsxs)(n.p,{children:["Optionally, you can profile gas usage in the Aptos virtual machine locally rather than ",(0,a.jsx)(n.a,{href:"/concepts/gas-txn-fee#estimating-gas-consumption-via-simulation",children:"simulating transactions"})," at the ",(0,a.jsx)(n.a,{href:"https://api.devnet.aptoslabs.com/v1/spec#/operations/simulate_transaction",children:"fullnode"}),".\nThis will generate a web-based gas report which you can view with your browser."]}),"\n",(0,a.jsxs)(n.p,{children:["To run the gas profiler, simply append the ",(0,a.jsx)(n.code,{children:"--profile-gas"})," option to the Aptos CLI ",(0,a.jsx)(n.code,{children:"move publish"}),", ",(0,a.jsx)(n.code,{children:"move run"})," or ",(0,a.jsx)(n.code,{children:"move run-script"})," command.\nSee ",(0,a.jsx)(n.a,{href:"gas-profiling",children:"Gas Profiling"})," for a full tutorial."]}),"\n",(0,a.jsx)(n.h2,{id:"debugging-and-printing-stack-trace",children:"Debugging and printing stack trace"}),"\n",(0,a.jsxs)(n.p,{children:["In this example, we will use ",(0,a.jsx)(n.code,{children:"DebugDemo"})," in ",(0,a.jsx)(n.a,{href:"https://github.com/aptos-labs/aptos-core/tree/main/crates/aptos/debug-move-example",children:"debug-move-example"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Now, you can use ",(0,a.jsx)(n.code,{children:"debug::print"})," and ",(0,a.jsx)(n.code,{children:"debug::print_stack_trace"})," in your ",(0,a.jsx)(n.a,{href:"https://github.com/aptos-labs/aptos-core/tree/main/crates/aptos/debug-move-example/sources/DebugDemo.move",children:"DebugDemo Move file"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"You can run the following command:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ aptos move test --package-dir crates/aptos/debug-move-example\n"})}),"\n",(0,a.jsx)(n.p,{children:"The command will generate the following output:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"Running Move unit tests\n[debug] 0000000000000000000000000000000000000000000000000000000000000001\nCall Stack:\n    [0] 0000000000000000000000000000000000000000000000000000000000000001::Message::sender_can_set_message\n\n        Code:\n            [4] CallGeneric(0)\n            [5] MoveLoc(0)\n            [6] LdConst(0)\n          > [7] Call(1)\n            [8] Ret\n\n        Locals:\n            [0] -\n            [1] 0000000000000000000000000000000000000000000000000000000000000001\n\n\nOperand Stack:\n"})}),"\n",(0,a.jsx)(n.h2,{id:"publishing-a-move-package-with-a-named-address",children:"Publishing a Move package with a named address"}),"\n",(0,a.jsxs)(n.p,{children:["In this example, we'll use the ",(0,a.jsx)(n.code,{children:"HelloBlockchain"})," in ",(0,a.jsx)(n.a,{href:"https://github.com/aptos-labs/aptos-core/tree/main/aptos-move/move-examples",children:"move-examples"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Publish the package with your account address set for ",(0,a.jsx)(n.code,{children:"HelloBlockchain"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Here, you need to change 8946741e5c907c43c9e042b3739993f32904723f8e2d1491564d38959b59ac71 to your account address."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ aptos move publish --package-dir aptos-move/move-examples/hello_blockchain/ --named-addresses hello_blockchain=8946741e5c907c43c9e042b3739993f32904723f8e2d1491564d38959b59ac71\n"})}),"\n",(0,a.jsxs)(n.admonition,{type:"tip",children:[(0,a.jsxs)(n.p,{children:["As an open source project, the source code as well as compiled code published to the Aptos blockchain is inherently open by default. This means code you upload may be downloaded from on-chain data. Even without source access, it is possible to regenerate Move source from Move bytecode. To disable source access, publish with the ",(0,a.jsx)(n.code,{children:"--included-artifacts none"})," argument, like so:"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"aptos move publish --included-artifacts none\n"})})]}),"\n",(0,a.jsxs)(n.p,{children:["You can additionally use named profiles for the addresses. The first placeholder is ",(0,a.jsx)(n.code,{children:"default"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ aptos move publish --package-dir aptos-move/move-examples/hello_blockchain/ --named-addresses hello_blockchain=default\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"When publishing Move modules, if multiple modules are in one package, then all the modules in this package must have the same account. If they have different accounts, then the publishing will fail at the transaction level."})}),"\n",(0,a.jsx)(n.h2,{id:"running-a-move-function",children:"Running a Move function"}),"\n",(0,a.jsx)(n.p,{children:"Now that you've published the function above, you can run it."}),"\n",(0,a.jsxs)(n.p,{children:["Arguments must be given a type with a colon to separate it. In this example, we want the input to be\nparsed as a string, so we put ",(0,a.jsx)(n.code,{children:"string:Hello!"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'$ aptos move run --function-id 0xb9bd2cfa58ca29bce1d7add25fce5c62220604cd0236fe3f90d9de91ed9fb8cb::message::set_message --args string:hello!\n{\n  "Result": {\n    "changes": [\n      {\n        "address": "b9bd2cfa58ca29bce1d7add25fce5c62220604cd0236fe3f90d9de91ed9fb8cb",\n        "data": {\n          "authentication_key": "0xb9bd2cfa58ca29bce1d7add25fce5c62220604cd0236fe3f90d9de91ed9fb8cb",\n          "self_address": "0xb9bd2cfa58ca29bce1d7add25fce5c62220604cd0236fe3f90d9de91ed9fb8cb",\n          "sequence_number": "3"\n        },\n        "event": "write_resource",\n        "resource": "0x1::account::Account"\n      },\n      {\n        "address": "b9bd2cfa58ca29bce1d7add25fce5c62220604cd0236fe3f90d9de91ed9fb8cb",\n        "data": {\n          "coin": {\n            "value": "9777"\n          },\n          "deposit_events": {\n            "counter": "1",\n            "guid": {\n              "id": {\n                "addr": "0xb9bd2cfa58ca29bce1d7add25fce5c62220604cd0236fe3f90d9de91ed9fb8cb",\n                "creation_num": "1"\n              }\n            }\n          },\n          "withdraw_events": {\n            "counter": "1",\n            "guid": {\n              "id": {\n                "addr": "0xb9bd2cfa58ca29bce1d7add25fce5c62220604cd0236fe3f90d9de91ed9fb8cb",\n                "creation_num": "2"\n              }\n            }\n          }\n        },\n        "event": "write_resource",\n        "resource": "0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>"\n      },\n      {\n        "address": "b9bd2cfa58ca29bce1d7add25fce5c62220604cd0236fe3f90d9de91ed9fb8cb",\n        "data": {\n          "counter": "4"\n        },\n        "event": "write_resource",\n        "resource": "0x1::guid::Generator"\n      },\n      {\n        "address": "b9bd2cfa58ca29bce1d7add25fce5c62220604cd0236fe3f90d9de91ed9fb8cb",\n        "data": {\n          "message": "hello!",\n          "message_change_events": {\n            "counter": "0",\n            "guid": {\n              "id": {\n                "addr": "0xb9bd2cfa58ca29bce1d7add25fce5c62220604cd0236fe3f90d9de91ed9fb8cb",\n                "creation_num": "3"\n              }\n            }\n          }\n        },\n        "event": "write_resource",\n        "resource": "0xb9bd2cfa58ca29bce1d7add25fce5c62220604cd0236fe3f90d9de91ed9fb8cb::Message::MessageHolder"\n      }\n    ],\n    "gas_used": 41,\n    "success": true,\n    "version": 3488,\n    "vm_status": "Executed successfully"\n  }\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"Additionally, profiles can replace addresses in the function id."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'$ aptos move run --function-id default::message::set_message --args string:hello!\n{\n  "Result": {\n    "changes": [\n      {\n        "address": "b9bd2cfa58ca29bce1d7add25fce5c62220604cd0236fe3f90d9de91ed9fb8cb",\n        "data": {\n          "authentication_key": "0xb9bd2cfa58ca29bce1d7add25fce5c62220604cd0236fe3f90d9de91ed9fb8cb",\n          "self_address": "0xb9bd2cfa58ca29bce1d7add25fce5c62220604cd0236fe3f90d9de91ed9fb8cb",\n          "sequence_number": "3"\n        },\n        "event": "write_resource",\n        "resource": "0x1::account::Account"\n      },\n      {\n        "address": "b9bd2cfa58ca29bce1d7add25fce5c62220604cd0236fe3f90d9de91ed9fb8cb",\n        "data": {\n          "coin": {\n            "value": "9777"\n          },\n          "deposit_events": {\n            "counter": "1",\n            "guid": {\n              "id": {\n                "addr": "0xb9bd2cfa58ca29bce1d7add25fce5c62220604cd0236fe3f90d9de91ed9fb8cb",\n                "creation_num": "1"\n              }\n            }\n          },\n          "withdraw_events": {\n            "counter": "1",\n            "guid": {\n              "id": {\n                "addr": "0xb9bd2cfa58ca29bce1d7add25fce5c62220604cd0236fe3f90d9de91ed9fb8cb",\n                "creation_num": "2"\n              }\n            }\n          }\n        },\n        "event": "write_resource",\n        "resource": "0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>"\n      },\n      {\n        "address": "b9bd2cfa58ca29bce1d7add25fce5c62220604cd0236fe3f90d9de91ed9fb8cb",\n        "data": {\n          "counter": "4"\n        },\n        "event": "write_resource",\n        "resource": "0x1::guid::Generator"\n      },\n      {\n        "address": "b9bd2cfa58ca29bce1d7add25fce5c62220604cd0236fe3f90d9de91ed9fb8cb",\n        "data": {\n          "message": "hello!",\n          "message_change_events": {\n            "counter": "0",\n            "guid": {\n              "id": {\n                "addr": "0xb9bd2cfa58ca29bce1d7add25fce5c62220604cd0236fe3f90d9de91ed9fb8cb",\n                "creation_num": "3"\n              }\n            }\n          }\n        },\n        "event": "write_resource",\n        "resource": "0xb9bd2cfa58ca29bce1d7add25fce5c62220604cd0236fe3f90d9de91ed9fb8cb::Message::MessageHolder"\n      }\n    ],\n    "gas_used": 41,\n    "success": true,\n    "version": 3488,\n    "vm_status": "Executed successfully"\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"arguments-in-json",children:"Arguments in JSON"}),"\n",(0,a.jsx)(n.h3,{id:"package-info",children:"Package info"}),"\n",(0,a.jsxs)(n.p,{children:["This section references the ",(0,a.jsxs)(n.a,{href:"https://github.com/aptos-labs/aptos-core/tree/main/aptos-move/move-examples/cli_args",children:[(0,a.jsx)(n.code,{children:"CliArgs"})," example package"]}),", which contains the following manifest:"]}),"\n","\n",(0,a.jsx)(c.A,{language:"toml",title:"Move.toml",children:i.A}),"\n",(0,a.jsxs)(n.p,{children:["Here, the package is deployed under the named address ",(0,a.jsx)(n.code,{children:"test_account"}),"."]}),"\n",(0,a.jsxs)(n.admonition,{type:"tip",children:[(0,a.jsxs)(n.p,{children:["Set your working directory to ",(0,a.jsx)(n.a,{href:"https://github.com/aptos-labs/aptos-core/tree/main/aptos-move/move-examples/cli_args",children:(0,a.jsx)(n.code,{children:"aptos-move/move-examples/cli_args"})})," to follow along:"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cd <aptos-core-parent-directory>/aptos-core/aptos-move/move-examples/cli_args\n"})})]}),"\n",(0,a.jsx)(n.h3,{id:"deploying-the-package",children:"Deploying the package"}),"\n",(0,a.jsx)(n.p,{children:"Start by mining a vanity address for Ace, who will deploy the package:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:"title=Command",children:"aptos key generate \\\n    --vanity-prefix 0xace \\\n    --output-file ace.key\n"})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": {\n    "Account Address:": "0xacef1b9b7d4ab208b99fed60746d18dcd74865edb7eb3c3f1428233988e4ba46",\n    "PublicKey Path": "ace.key.pub",\n    "PrivateKey Path": "ace.key"\n  }\n}\n'})})]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"The exact account address should vary for each run, though the vanity prefix should not."})}),"\n",(0,a.jsx)(n.p,{children:"Store Ace's address in a shell variable, so you can call it inline later on:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Your exact address should vary\nace_addr=0xacef1b9b7d4ab208b99fed60746d18dcd74865edb7eb3c3f1428233988e4ba46\n"})}),"\n",(0,a.jsx)(n.p,{children:"Fund Ace's account with the faucet (either devnet or testnet):"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:"title=Command",children:"aptos account fund-with-faucet --account $ace_addr\n"})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": "Added 100000000 Octas to account acef1b9b7d4ab208b99fed60746d18dcd74865edb7eb3c3f1428233988e4ba46"\n}\n'})})]}),"\n",(0,a.jsx)(n.p,{children:"Now publish the package under Ace's account:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:"title=Command",children:"aptos move publish \\\n    --named-addresses test_account=$ace_addr \\\n    --private-key-file ace.key \\\n    --assume-yes\n"})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": {\n    "transaction_hash": "0x1d7b074dd95724c5459a1c30fe4cb3875e7b0478cc90c87c8e3f21381625bec1",\n    "gas_used": 1294,\n    "gas_unit_price": 100,\n    "sender": "acef1b9b7d4ab208b99fed60746d18dcd74865edb7eb3c3f1428233988e4ba46",\n    "sequence_number": 0,\n    "success": true,\n    "timestamp_us": 1685077849297587,\n    "version": 528422121,\n    "vm_status": "Executed successfully"\n  }\n}\n'})})]}),"\n",(0,a.jsx)(n.h3,{id:"entry-functions",children:"Entry functions"}),"\n",(0,a.jsxs)(n.p,{children:["The only module in the package, ",(0,a.jsx)(n.code,{children:"cli_args.move"}),", defines a simple ",(0,a.jsx)(n.code,{children:"Holder"})," resource with fields of various data types:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-rust",metastring:'title="Holder in cli_args.move"',children:"module test_account::cli_args {\n    use std::signer;\n    use aptos_std::type_info::{Self, TypeInfo};\n    use std::string::String;\n\n    struct Holder has key, drop {\n        u8_solo: u8,\n        bytes: vector<u8>,\n        utf8_string: String,\n        bool_vec: vector<bool>,\n        address_vec_vec: vector<vector<address>>,\n        type_info_1: TypeInfo,\n        type_info_2: TypeInfo,\n    } \n"})}),"\n",(0,a.jsx)(n.p,{children:"A public entry function with multi-nested vectors can be used to set the fields:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-rust",metastring:'title="Setter function in cli_args.move"',children:"/// Set values in a `Holder` under `account`.\npublic entry fun set_vals<T1, T2>(\n    account: signer,\n    u8_solo: u8,\n    bytes: vector<u8>,\n    utf8_string: String,\n    bool_vec: vector<bool>,\n    address_vec_vec: vector<vector<address>>,\n) acquires Holder {\n    let account_addr = signer::address_of(&account);\n    if (exists<Holder>(account_addr)) {\n        move_from<Holder>(account_addr);\n    };\n    move_to(&account, Holder {\n        u8_solo,\n        bytes,\n        utf8_string,\n        bool_vec,\n        address_vec_vec,\n        type_info_1: type_info::type_of<T1>(),\n        type_info_2: type_info::type_of<T2>(),\n    });\n} \n"})}),"\n",(0,a.jsxs)(n.p,{children:["After the package has been published, ",(0,a.jsx)(n.code,{children:"aptos move run"})," can be used to call ",(0,a.jsx)(n.code,{children:"set_vals()"}),":"]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"To pass vectors (including nested vectors) as arguments from the command line, use JSON syntax escaped with quotes!"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Running function with nested vector arguments from CLI"',children:'aptos move run \\\n    --function-id $ace_addr::cli_args::set_vals \\\n    --type-args \\\n        0x1::account::Account \\\n        0x1::chain_id::ChainId \\\n    --args \\\n        u8:123 \\\n        "hex:0x1234" \\\n        "string:hello, world\\! \u2665" \\\n        "bool:[false, true, false, false]" \\\n        \'address:[["0xace", "0xbee"], ["0xcad"], []]\' \\\n    --private-key-file ace.key \\\n    --assume-yes\n'})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": {\n    "transaction_hash": "0x5e141dc6c28e86fa9f5594de93d07a014264ebadfb99be6db922a929eb1da24f",\n    "gas_used": 504,\n    "gas_unit_price": 100,\n    "sender": "acef1b9b7d4ab208b99fed60746d18dcd74865edb7eb3c3f1428233988e4ba46",\n    "sequence_number": 1,\n    "success": true,\n    "timestamp_us": 1685077888820037,\n    "version": 528422422,\n    "vm_status": "Executed successfully"\n  }\n}\n'})})]}),"\n",(0,a.jsx)(n.p,{children:"The function ID, type arguments, and arguments can alternatively be specified in a JSON file:"}),"\n","\n",(0,a.jsx)(c.A,{language:"json",title:"entry_function_arguments.json",children:r.A}),"\n",(0,a.jsxs)(n.p,{children:["Here, the call to ",(0,a.jsx)(n.code,{children:"aptos move run"})," looks like:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Running function with JSON input file"',children:"aptos move run \\\n    --json-file entry_function_arguments.json \\\n    --private-key-file ace.key \\\n    --assume-yes\n"})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": {\n    "transaction_hash": "0x60a32315bb48bf6d31629332f6b1a3471dd0cb016fdee8d0bb7dcd0be9833e60",\n    "gas_used": 3,\n    "gas_unit_price": 100,\n    "sender": "acef1b9b7d4ab208b99fed60746d18dcd74865edb7eb3c3f1428233988e4ba46",\n    "sequence_number": 2,\n    "success": true,\n    "timestamp_us": 1685077961499641,\n    "version": 528422965,\n    "vm_status": "Executed successfully"\n  }\n}\n'})})]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["If you are trying to run the example yourself don't forget to substitute Ace's actual address for ",(0,a.jsx)(n.code,{children:"<test_account>"})," in ",(0,a.jsx)(n.code,{children:"entry_function_arguments.json"}),"!"]})}),"\n",(0,a.jsx)(n.h3,{id:"view-functions",children:"View functions"}),"\n",(0,a.jsxs)(n.p,{children:["Once the values in a ",(0,a.jsx)(n.code,{children:"Holder"})," have been set, the ",(0,a.jsx)(n.code,{children:"reveal()"})," view function can be used to check the first three fields, and to compare type arguments against the last two fields:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-rust",metastring:'title="View function"',children:"    struct RevealResult has drop {\n        u8_solo: u8,\n        bytes: vector<u8>,\n        utf8_string: String,\n        bool_vec: vector<bool>,\n        address_vec_vec: vector<vector<address>>,\n        type_info_1_match: bool,\n        type_info_2_match: bool\n    }\n\n    #[view]\n    /// Pack into a `RevealResult` the first three fields in host's\n    /// `Holder`, as well as two `bool` flags denoting if `T1` & `T2`\n    /// respectively match `Holder.type_info_1` & `Holder.type_info_2`,\n    /// then return the `RevealResult`.\n    public fun reveal<T1, T2>(host: address): RevealResult acquires Holder {\n        let holder_ref = borrow_global<Holder>(host);\n        RevealResult {\n            u8_solo: holder_ref.u8_solo,\n            bytes: holder_ref.bytes,\n            utf8_string: holder_ref.utf8_string,\n            bool_vec: holder_ref.bool_vec,\n            address_vec_vec: holder_ref.address_vec_vec,\n            type_info_1_match:\n                type_info::type_of<T1>() == holder_ref.type_info_1,\n            type_info_2_match:\n                type_info::type_of<T2>() == holder_ref.type_info_2\n        }\n    }\n\n} \n"})}),"\n",(0,a.jsx)(n.p,{children:"This view function can be called with arguments specified either from the CLI or from a JSON file:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Arguments via CLI"',children:"aptos move view \\\n    --function-id $ace_addr::cli_args::reveal \\\n    --type-args \\\n        0x1::account::Account \\\n        0x1::account::Account \\\n    --args address:$ace_addr\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Arguments via JSON file"',children:"aptos move view --json-file view_function_arguments.json\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["If you are trying to run the example yourself don't forget to substitute Ace's actual address for ",(0,a.jsx)(n.code,{children:"<test_account>"})," in ",(0,a.jsx)(n.code,{children:"view_function_arguments.json"})," (twice)!"]})}),"\n","\n",(0,a.jsx)(c.A,{language:"json",title:"view_function_arguments.json",children:d.A}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Output"',children:'{\n  "Result": [\n    {\n      "address_vec_vec": [\n        [\n          "0xace",\n          "0xbee"\n        ],\n        [\n          "0xcad"\n        ],\n        []\n      ],\n      "bool_vec": [\n        false,\n        true,\n        false,\n        false\n      ],\n      "bytes": "0x1234",\n      "type_info_1_match": true,\n      "type_info_2_match": false,\n      "u8_solo": 123,\n      "utf8_string": "hello, world! \u2665"\n    }\n  ]\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"script-functions",children:"Script functions"}),"\n",(0,a.jsxs)(n.p,{children:["The package also contains a script, ",(0,a.jsx)(n.code,{children:"set_vals.move"}),", which is a wrapper for the setter function:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-rust",metastring:'title="script"',children:"script {\n    use test_account::cli_args;\n    use std::vector;\n    use std::string::String;\n\n    /// Get a `bool` vector where each element indicates `true` if the\n    /// corresponding element in `u8_vec` is greater than `u8_solo`.\n    /// Then pack `address_solo` in a `vector<vector<<address>>` and\n    /// pass resulting argument set to public entry function.\n    fun set_vals<T1, T2>(\n        account: signer,\n        u8_solo: u8,\n        bytes: vector<u8>,\n        utf8_string: String,\n        u8_vec: vector<u8>,\n        address_solo: address,\n    ) {\n        let bool_vec = vector::map_ref(&u8_vec, |e_ref| *e_ref > u8_solo);\n        let addr_vec_vec = vector[vector[address_solo]];\n        cli_args::set_vals<T1, T2>(account, u8_solo, bytes, utf8_string, bool_vec, addr_vec_vec);\n    }\n} \n"})}),"\n",(0,a.jsx)(n.p,{children:"First compile the package (this will compile the script):"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:"title=Compilation",children:"aptos move compile --named-addresses test_account=$ace_addr\n"})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": [\n    "acef1b9b7d4ab208b99fed60746d18dcd74865edb7eb3c3f1428233988e4ba46::cli_args"\n  ]\n}\n'})})]}),"\n",(0,a.jsxs)(n.p,{children:["Next, run ",(0,a.jsx)(n.code,{children:"aptos move run-script"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Arguments via CLI"',children:'aptos move run-script \\\n    --compiled-script-path build/CliArgs/bytecode_scripts/set_vals.mv \\\n    --type-args \\\n        0x1::account::Account \\\n        0x1::chain_id::ChainId \\\n    --args \\\n        u8:123 \\\n        "hex:0x1234" \\\n        "string:hello, world\\! \u2665" \\\n        "u8:[122, 123, 124, 125]" \\\n        address:"0xace" \\\n    --private-key-file ace.key \\\n    --assume-yes\n'})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": {\n    "transaction_hash": "0x1d644eba8187843cc43919469112339bc2c435a49a733ac813b7bc6c79770152",\n    "gas_used": 3,\n    "gas_unit_price": 100,\n    "sender": "acef1b9b7d4ab208b99fed60746d18dcd74865edb7eb3c3f1428233988e4ba46",\n    "sequence_number": 3,\n    "success": true,\n    "timestamp_us": 1685078415935612,\n    "version": 528426413,\n    "vm_status": "Executed successfully"\n  }\n}\n'})})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Arguments via JSON file"',children:"aptos move run-script \\\n    --compiled-script-path build/CliArgs/bytecode_scripts/set_vals.mv \\\n    --json-file script_function_arguments.json \\\n    --private-key-file ace.key \\\n    --assume-yes\n"})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": {\n    "transaction_hash": "0x840e2d6a5ab80d5a570effb3665f775f1755e0fd8d76e52bfa7241aaade883d7",\n    "gas_used": 3,\n    "gas_unit_price": 100,\n    "sender": "acef1b9b7d4ab208b99fed60746d18dcd74865edb7eb3c3f1428233988e4ba46",\n    "sequence_number": 4,\n    "success": true,\n    "timestamp_us": 1685078516832128,\n    "version": 528427132,\n    "vm_status": "Executed successfully"\n  }\n}\n'})})]}),"\n","\n","\n",(0,a.jsx)(c.A,{language:"json",title:"script_function_arguments.json",children:o.A}),"\n",(0,a.jsxs)(n.p,{children:["Both such script function invocations result in the following ",(0,a.jsx)(n.code,{children:"reveal()"})," view function output:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="View function call"',children:"aptos move view \\\n    --function-id $ace_addr::cli_args::reveal \\\n    --type-args \\\n        0x1::account::Account \\\n        0x1::chain_id::ChainId \\\n    --args address:$ace_addr\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",metastring:'title="View function output"',children:'{\n  "Result": [\n    {\n      "address_vec_vec": [["0xace"]],\n      "bool_vec": [false, false, true, true],\n      "bytes": "0x1234",\n      "type_info_1_match": true,\n      "type_info_2_match": true,\n      "u8_solo": 123,\n      "utf8_string": "hello, world! \u2665"\n    }\n  ]\n}\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["As of the time of this writing, the ",(0,a.jsx)(n.code,{children:"aptos"})," CLI only supports script function arguments for vectors of type ",(0,a.jsx)(n.code,{children:"u8"}),", and only up to a vector depth of 1. Hence ",(0,a.jsx)(n.code,{children:"vector<address>"})," and ",(0,a.jsx)(n.code,{children:"vector<vector<u8>>"})," are invalid script function argument types."]})}),"\n",(0,a.jsx)(n.h2,{id:"multisig-governance",children:"Multisig governance"}),"\n",(0,a.jsx)(n.h3,{id:"background",children:"Background"}),"\n",(0,a.jsxs)(n.p,{children:["This section builds upon the ",(0,a.jsx)(n.a,{href:"#arguments-in-json",children:"Arguments in JSON"})," section, and likewise references the ",(0,a.jsxs)(n.a,{href:"https://github.com/aptos-labs/aptos-core/tree/main/aptos-move/move-examples/cli_args",children:[(0,a.jsx)(n.code,{children:"CliArgs"})," example package"]}),"."]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["If you would like to follow along, start by completing the ",(0,a.jsx)(n.a,{href:"#arguments-in-json",children:"Arguments in JSON"})," tutorial steps!"]})}),"\n",(0,a.jsxs)(n.p,{children:['For this example, Ace and Bee will conduct governance operations from a 2-of-2 "multisig v2" account (an on-chain multisig account per ',(0,a.jsx)(n.a,{href:"https://github.com/aptos-labs/aptos-core/blob/main/aptos-move/framework/aptos-framework/sources/multisig_account.move",children:(0,a.jsx)(n.code,{children:"multisig_account.move"})}),")"]}),"\n",(0,a.jsx)(n.h3,{id:"account-creation",children:"Account creation"}),"\n",(0,a.jsxs)(n.p,{children:["Since Ace's account was created during the ",(0,a.jsx)(n.a,{href:"#arguments-in-json",children:"Arguments in JSON"})," tutorial, start by mining a vanity address account for Bee too:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:"title=Command",children:"aptos key generate \\\n    --vanity-prefix 0xbee \\\n    --output-file bee.key\n"})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": {\n    "PublicKey Path": "bee.key.pub",\n    "PrivateKey Path": "bee.key",\n    "Account Address:": "0xbeec980219d246581cef5166dc6ba5fb1e090c7a7786a5176d111a9029b16ddc"\n  }\n}\n'})})]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"The exact account address should vary for each run, though the vanity prefix should not."})}),"\n",(0,a.jsx)(n.p,{children:"Store Bee's address in a shell variable, so you can call it inline later on:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Your exact address should vary\nbee_addr=0xbeec980219d246581cef5166dc6ba5fb1e090c7a7786a5176d111a9029b16ddc\n"})}),"\n",(0,a.jsx)(n.p,{children:"Fund Bee's account using the faucet:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:"title=Command",children:"aptos account fund-with-faucet --account $bee_addr\n"})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": "Added 100000000 Octas to account beec980219d246581cef5166dc6ba5fb1e090c7a7786a5176d111a9029b16ddc"\n}\n'})})]}),"\n",(0,a.jsx)(n.p,{children:"Ace can now create a multisig account:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:"title=Command",children:"aptos multisig create \\\n    --additional-owners $bee_addr \\\n    --num-signatures-required 2 \\\n    --private-key-file ace.key \\\n    --assume-yes\n"})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": {\n    "multisig_address": "57478da34604655c68b1dcb89e4f4a9124b6c0ecc1c59a0931d58cc4e60ac5c5",\n    "transaction_hash": "0x849cc756de2d3b57210f5d32ae4b5e7d1f80e5d376233885944b6f3cc2124a05",\n    "gas_used": 1524,\n    "gas_unit_price": 100,\n    "sender": "acef1b9b7d4ab208b99fed60746d18dcd74865edb7eb3c3f1428233988e4ba46",\n    "sequence_number": 5,\n    "success": true,\n    "timestamp_us": 1685078644186194,\n    "version": 528428043,\n    "vm_status": "Executed successfully"\n  }\n}\n'})})]}),"\n",(0,a.jsx)(n.p,{children:"Store the multisig address in a shell variable:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Your address should vary\nmultisig_addr=0x57478da34604655c68b1dcb89e4f4a9124b6c0ecc1c59a0931d58cc4e60ac5c5\n"})}),"\n",(0,a.jsx)(n.h3,{id:"inspect-the-multisig",children:"Inspect the multisig"}),"\n",(0,a.jsxs)(n.p,{children:["Use the assorted ",(0,a.jsxs)(n.a,{href:"https://github.com/aptos-labs/aptos-core/blob/9fa0102c3e474d99ea35a0a85c6893604be41611/aptos-move/framework/aptos-framework/sources/multisig_account.move#L237",children:[(0,a.jsx)(n.code,{children:"multisig_account.move"})," view functions"]})," to inspect the multisig:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Number of signatures required"',children:'aptos move view \\\n    --function-id 0x1::multisig_account::num_signatures_required \\\n    --args \\\n        address:"$multisig_addr"\n'})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": [\n    "2"\n  ]\n}\n'})})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Owners"',children:'aptos move view \\\n    --function-id 0x1::multisig_account::owners \\\n    --args \\\n        address:"$multisig_addr"\n'})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": [\n    [\n      "0xbeec980219d246581cef5166dc6ba5fb1e090c7a7786a5176d111a9029b16ddc",\n      "0xacef1b9b7d4ab208b99fed60746d18dcd74865edb7eb3c3f1428233988e4ba46"\n    ]\n  ]\n}\n'})})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Last resolved sequence number"',children:'aptos move view \\\n    --function-id 0x1::multisig_account::last_resolved_sequence_number \\\n    --args \\\n        address:"$multisig_addr"\n'})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": [\n    "0"\n  ]\n}\n'})})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Next sequence number"',children:'aptos move view \\\n    --function-id 0x1::multisig_account::next_sequence_number \\\n    --args \\\n        address:"$multisig_addr"\n'})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": [\n    "1"\n  ]\n}\n'})})]}),"\n",(0,a.jsx)(n.h3,{id:"enqueue-a-publication-transaction",children:"Enqueue a publication transaction"}),"\n",(0,a.jsxs)(n.p,{children:["The first multisig transaction enqueued will be a transaction for publication of the ",(0,a.jsxs)(n.a,{href:"https://github.com/aptos-labs/aptos-core/tree/main/aptos-move/move-examples/cli_args",children:[(0,a.jsx)(n.code,{children:"CliArgs"})," example package"]}),".\nFirst, generate a publication payload entry function JSON file:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Command"',children:"aptos move build-publish-payload \\\n    --named-addresses test_account=$multisig_addr \\\n    --json-output-file publication.json \\\n    --assume-yes\n"})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": "Publication payload entry function JSON file saved to publication.json"\n}\n'})})]}),"\n",(0,a.jsx)(n.p,{children:"Now have Ace propose publication of the package from the multisig account, storing only the payload hash on-chain:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Command"',children:"aptos multisig create-transaction \\\n    --multisig-address $multisig_addr \\\n    --json-file publication.json \\\n    --store-hash-only \\\n    --private-key-file ace.key \\\n    --assume-yes\n"})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": {\n    "transaction_hash": "0x70c75903f8e1b1c0069f1e84ef9583ad8000f24124b33a746c88d2b031f7fe2c",\n    "gas_used": 510,\n    "gas_unit_price": 100,\n    "sender": "acef1b9b7d4ab208b99fed60746d18dcd74865edb7eb3c3f1428233988e4ba46",\n    "sequence_number": 6,\n    "success": true,\n    "timestamp_us": 1685078836492390,\n    "version": 528429447,\n    "vm_status": "Executed successfully"\n  }\n}\n'})})]}),"\n",(0,a.jsx)(n.p,{children:"Note that the last resolved sequence number is still 0 because no transactions have been resolved:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Last resolved sequence number"',children:'aptos move view \\\n    --function-id 0x1::multisig_account::last_resolved_sequence_number \\\n    --args \\\n        address:"$multisig_addr"\n'})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": [\n    "0"\n  ]\n}\n'})})]}),"\n",(0,a.jsx)(n.p,{children:"However, the next sequence number has been incremented because a transaction has been enqueued:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Next sequence number"',children:'aptos move view \\\n    --function-id 0x1::multisig_account::next_sequence_number \\\n    --args \\\n        address:"$multisig_addr"\n'})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": [\n    "2"\n  ]\n}\n'})})]}),"\n",(0,a.jsx)(n.p,{children:"The multisig transaction enqueued on-chain can now be inspected:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Get transaction"',children:'aptos move view \\\n    --function-id 0x1::multisig_account::get_transaction \\\n    --args \\\n        address:"$multisig_addr" \\\n        String:1\n'})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": [\n    {\n      "creation_time_secs": "1685078836",\n      "creator": "0xacef1b9b7d4ab208b99fed60746d18dcd74865edb7eb3c3f1428233988e4ba46",\n      "payload": {\n        "vec": []\n      },\n      "payload_hash": {\n        "vec": [\n          "0x62b91159c1428c1ef488c7290771de458464bd665691d9653d195bc28e0d2080"\n        ]\n      },\n      "votes": {\n        "data": [\n          {\n            "key": "0xacef1b9b7d4ab208b99fed60746d18dcd74865edb7eb3c3f1428233988e4ba46",\n            "value": true\n          }\n        ]\n      }\n    }\n  ]\n}\n'})})]}),"\n",(0,a.jsxs)(n.p,{children:["Note from the above result that no payload is stored on-chain, and that Ace implicitly approved the transaction (voted ",(0,a.jsx)(n.code,{children:"true"}),") upon the submission of the proposal."]}),"\n",(0,a.jsx)(n.h3,{id:"enqueue-a-governance-parameter-transaction",children:"Enqueue a governance parameter transaction"}),"\n",(0,a.jsx)(n.p,{children:"Now have Bee enqueue a governance parameter setter transaction, storing the entire transaction payload on-chain:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Command"',children:'aptos multisig create-transaction \\\n    --multisig-address $multisig_addr \\\n    --function-id $multisig_addr::cli_args::set_vals \\\n    --type-args \\\n        0x1::account::Account \\\n        0x1::chain_id::ChainId \\\n    --args \\\n        u8:123 \\\n        "bool:[false, true, false, false]" \\\n        \'address:[["0xace", "0xbee"], ["0xcad"], []]\' \\\n    --private-key-file bee.key \\\n    --assume-yes\n'})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": {\n    "transaction_hash": "0xd0a348072d5bfc5a2e5d444f92f0ecc10b978dad720b174303bc6d91342f27ec",\n    "gas_used": 511,\n    "gas_unit_price": 100,\n    "sender": "beec980219d246581cef5166dc6ba5fb1e090c7a7786a5176d111a9029b16ddc",\n    "sequence_number": 0,\n    "success": true,\n    "timestamp_us": 1685078954841650,\n    "version": 528430315,\n    "vm_status": "Executed successfully"\n  }\n}\n'})})]}),"\n",(0,a.jsx)(n.p,{children:"Note the next sequence number has been incremented again:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Next sequence number"',children:'aptos move view \\\n    --function-id 0x1::multisig_account::next_sequence_number \\\n    --args \\\n        address:"$multisig_addr"\n'})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": [\n    "3"\n  ]\n}\n'})})]}),"\n",(0,a.jsx)(n.p,{children:"Now both the publication and parameter transactions are pending:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Get pending transactions"',children:'aptos move view \\\n    --function-id 0x1::multisig_account::get_pending_transactions \\\n    --args \\\n        address:"$multisig_addr"\n'})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": [\n    [\n      {\n        "creation_time_secs": "1685078836",\n        "creator": "0xacef1b9b7d4ab208b99fed60746d18dcd74865edb7eb3c3f1428233988e4ba46",\n        "payload": {\n          "vec": []\n        },\n        "payload_hash": {\n          "vec": [\n            "0x62b91159c1428c1ef488c7290771de458464bd665691d9653d195bc28e0d2080"\n          ]\n        },\n        "votes": {\n          "data": [\n            {\n              "key": "0xacef1b9b7d4ab208b99fed60746d18dcd74865edb7eb3c3f1428233988e4ba46",\n              "value": true\n            }\n          ]\n        }\n      },\n      {\n        "creation_time_secs": "1685078954",\n        "creator": "0xbeec980219d246581cef5166dc6ba5fb1e090c7a7786a5176d111a9029b16ddc",\n        "payload": {\n          "vec": [\n            "0x0057478da34604655c68b1dcb89e4f4a9124b6c0ecc1c59a0931d58cc4e60ac5c508636c695f61726773087365745f76616c7302070000000000000000000000000000000000000000000000000000000000000001076163636f756e74074163636f756e740007000000000000000000000000000000000000000000000000000000000000000108636861696e5f696407436861696e49640003017b0504000100006403020000000000000000000000000000000000000000000000000000000000000ace0000000000000000000000000000000000000000000000000000000000000bee010000000000000000000000000000000000000000000000000000000000000cad00"\n          ]\n        },\n        "payload_hash": {\n          "vec": []\n        },\n        "votes": {\n          "data": [\n            {\n              "key": "0xbeec980219d246581cef5166dc6ba5fb1e090c7a7786a5176d111a9029b16ddc",\n              "value": true\n            }\n          ]\n        }\n      }\n    ]\n  ]\n}\n'})})]}),"\n",(0,a.jsx)(n.h3,{id:"execute-the-publication-transaction",children:"Execute the publication transaction"}),"\n",(0,a.jsx)(n.p,{children:"Since only Ace has voted on the publication transaction (which he implicitly approved upon proposing) the transaction can't be executed yet:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Can be executed"',children:'aptos move view \\\n    --function-id 0x1::multisig_account::can_be_executed \\\n    --args \\\n        address:"$multisig_addr" \\\n        String:1\n'})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": [\n    false\n  ]\n}\n'})})]}),"\n",(0,a.jsx)(n.p,{children:"Before Bee votes, however, she verifies that the payload hash stored on-chain matches the publication entry function JSON file:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Verifying transaction proposal"',children:"aptos multisig verify-proposal \\\n    --multisig-address $multisig_addr \\\n    --json-file publication.json \\\n    --sequence-number 1\n"})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": {\n    "Status": "Transaction match",\n    "Multisig transaction": {\n      "creation_time_secs": "1685078836",\n      "creator": "0xacef1b9b7d4ab208b99fed60746d18dcd74865edb7eb3c3f1428233988e4ba46",\n      "payload": {\n        "vec": []\n      },\n      "payload_hash": {\n        "vec": [\n          "0x62b91159c1428c1ef488c7290771de458464bd665691d9653d195bc28e0d2080"\n        ]\n      },\n      "votes": {\n        "data": [\n          {\n            "key": "0xacef1b9b7d4ab208b99fed60746d18dcd74865edb7eb3c3f1428233988e4ba46",\n            "value": true\n          }\n        ]\n      }\n    }\n  }\n}\n'})})]}),"\n",(0,a.jsx)(n.p,{children:"Since Bee has verified that the on-chain payload hash checks out against her locally-compiled package publication JSON file, she votes yes:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Approving transaction"',children:"aptos multisig approve \\\n    --multisig-address $multisig_addr \\\n    --sequence-number 1 \\\n    --private-key-file bee.key \\\n    --assume-yes\n"})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": {\n    "transaction_hash": "0xa5fb49f1077de6aa6d976e6bcc05e4c50c6cd061f1c87e8f1ea74e7a04a06bd1",\n    "gas_used": 6,\n    "gas_unit_price": 100,\n    "sender": "beec980219d246581cef5166dc6ba5fb1e090c7a7786a5176d111a9029b16ddc",\n    "sequence_number": 1,\n    "success": true,\n    "timestamp_us": 1685079892130861,\n    "version": 528437204,\n    "vm_status": "Executed successfully"\n  }\n}\n'})})]}),"\n",(0,a.jsx)(n.p,{children:"Now the transaction can be executed:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Can be executed"',children:'aptos move view \\\n    --function-id 0x1::multisig_account::can_be_executed \\\n    --args \\\n        address:"$multisig_addr" \\\n        String:1\n'})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": [\n    true\n  ]\n}\n'})})]}),"\n",(0,a.jsx)(n.p,{children:"Now either Ace or Bee can invoke the publication transaction from the multisig account, passing the full transaction payload since only the hash was stored on-chain:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Publication"',children:"aptos multisig execute-with-payload \\\n    --multisig-address $multisig_addr \\\n    --json-file publication.json \\\n    --private-key-file bee.key \\\n    --max-gas 10000 \\\n    --assume-yes\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["Pending the resolution of ",(0,a.jsx)(n.a,{href:"https://github.com/aptos-labs/aptos-core/issues/8304",children:"#8304"}),", the transaction simulator (which is used to estimate gas costs) is broken for multisig transactions, so you will have to manually specify a max gas amount."]})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsxs)(n.p,{children:["Also pending the resolution of ",(0,a.jsx)(n.a,{href:"https://github.com/aptos-labs/aptos-core/issues/8304",children:"#8304"}),", the CLI output for a successful multisig publication transaction execution results in an API error if only the payload hash has been stored on-chain, but the transaction can be manually verified using an explorer."]})]}),"\n",(0,a.jsx)(n.h3,{id:"execute-the-governance-parameter-transaction",children:"Execute the governance parameter transaction"}),"\n",(0,a.jsx)(n.p,{children:"Since only Bee has voted on the governance parameter transaction (which she implicitly approved upon proposing), the transaction can't be executed yet:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Can be executed"',children:'aptos move view \\\n    --function-id 0x1::multisig_account::can_be_executed \\\n    --args \\\n        address:"$multisig_addr" \\\n        String:2\n'})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": [\n    false\n  ]\n}\n'})})]}),"\n",(0,a.jsx)(n.p,{children:"Before Ace votes, however, he verifies that the payload stored on-chain matches the function arguments he expects:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Verifying transaction proposal"',children:'aptos multisig verify-proposal \\\n    --multisig-address $multisig_addr \\\n    --function-id $multisig_addr::cli_args::set_vals \\\n    --type-args \\\n        0x1::account::Account \\\n        0x1::chain_id::ChainId \\\n    --args \\\n        u8:123 \\\n        "bool:[false, true, false, false]" \\\n        \'address:[["0xace", "0xbee"], ["0xcad"], []]\' \\\n    --sequence-number 2\n'})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": {\n    "Status": "Transaction match",\n    "Multisig transaction": {\n      "creation_time_secs": "1685078954",\n      "creator": "0xbeec980219d246581cef5166dc6ba5fb1e090c7a7786a5176d111a9029b16ddc",\n      "payload": {\n        "vec": [\n          "0x0057478da34604655c68b1dcb89e4f4a9124b6c0ecc1c59a0931d58cc4e60ac5c508636c695f61726773087365745f76616c7302070000000000000000000000000000000000000000000000000000000000000001076163636f756e74074163636f756e740007000000000000000000000000000000000000000000000000000000000000000108636861696e5f696407436861696e49640003017b0504000100006403020000000000000000000000000000000000000000000000000000000000000ace0000000000000000000000000000000000000000000000000000000000000bee010000000000000000000000000000000000000000000000000000000000000cad00"\n        ]\n      },\n      "payload_hash": {\n        "vec": []\n      },\n      "votes": {\n        "data": [\n          {\n            "key": "0xbeec980219d246581cef5166dc6ba5fb1e090c7a7786a5176d111a9029b16ddc",\n            "value": true\n          }\n        ]\n      }\n    }\n  }\n}\n'})})]}),"\n",(0,a.jsx)(n.p,{children:"Note that the verification fails if he modifies even a single argument:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Failed transaction verification with modified u8"',children:'aptos multisig verify-proposal \\\n    --multisig-address $multisig_addr \\\n    --function-id $multisig_addr::cli_args::set_vals \\\n    --type-args \\\n        0x1::account::Account \\\n        0x1::chain_id::ChainId \\\n    --args \\\n        u8:200 \\\n        "bool:[false, true, false, false]" \\\n        \'address:[["0xace", "0xbee"], ["0xcad"], []]\' \\\n    --sequence-number 2\n'})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Error": "Unexpected error: Transaction mismatch: The transaction you provided has a payload hash of 0xe494b0072d6f940317344967cf0e818c80082375833708c773b0275f3ad07e51, but the on-chain transaction proposal you specified has a payload hash of 0x070ed7c3f812f25f585461305d507b96a4e756f784e01c8c59901871267a1580. For more info, see https://aptos.dev/move/move-on-aptos/cli#multisig-governance"\n}\n'})})]}),"\n",(0,a.jsx)(n.p,{children:"Ace approves the transaction:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Approving transaction"',children:"aptos multisig approve \\\n    --multisig-address $multisig_addr \\\n    --sequence-number 2 \\\n    --private-key-file ace.key \\\n    --assume-yes\n"})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": {\n    "transaction_hash": "0x233427d95832234fa13dddad5e0b225d40168b4c2c6b84f5255eecc3e68401bf",\n    "gas_used": 6,\n    "gas_unit_price": 100,\n    "sender": "acef1b9b7d4ab208b99fed60746d18dcd74865edb7eb3c3f1428233988e4ba46",\n    "sequence_number": 7,\n    "success": true,\n    "timestamp_us": 1685080266378400,\n    "version": 528439883,\n    "vm_status": "Executed successfully"\n  }\n}\n'})})]}),"\n",(0,a.jsx)(n.p,{children:"Since the payload was stored on-chain, it is not required to execute the pending transaction:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="Execution"',children:"aptos multisig execute \\\n    --multisig-address $multisig_addr \\\n    --private-key-file ace.key \\\n    --max-gas 10000 \\\n    --assume-yes\n"})}),"\n",(0,a.jsxs)(s,{children:[(0,a.jsx)("summary",{children:"Output"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": {\n    "transaction_hash": "0xbc99f929708a1058b223aa880d04607a78ebe503367ec4dab23af4a3bdb541b2",\n    "gas_used": 505,\n    "gas_unit_price": 100,\n    "sender": "acef1b9b7d4ab208b99fed60746d18dcd74865edb7eb3c3f1428233988e4ba46",\n    "sequence_number": 8,\n    "success": true,\n    "timestamp_us": 1685080344045461,\n    "version": 528440423,\n    "vm_status": "Executed successfully"\n\n'})})]})]})}function b(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(g,{...e})}):g(e)}},45745:(e,n,s)=>{s.d(n,{A:()=>a});const a='[package]\nname = "CliArgs"\nversion = "0.1.0"\nupgrade_policy = "compatible"\n\n[addresses]\ntest_account = "_"\n\n[dependencies]\nAptosFramework = { git = "https://github.com/aptos-labs/aptos-core.git", rev = "mainnet", subdir = "aptos-move/framework/aptos-framework" }'},99156:(e,n,s)=>{s.d(n,{A:()=>a});const a='{\n  "function_id": "<test_account>::cli_args::set_vals",\n  "type_args": ["0x1::account::Account", "0x1::chain_id::ChainId"],\n  "args": [\n    {\n      "type": "u8",\n      "value": 123\n    },\n    {\n      "type": "hex",\n      "value": "0x1234"\n    },\n    {\n      "type": "string",\n      "value": "hello, world! \u2665"\n    },\n    {\n      "type": "bool",\n      "value": [false, true, false, false]\n    },\n    {\n      "type": "address",\n      "value": [["0xace", "0xbee"], ["0xcad"], []]\n    }\n  ]\n}\n'},28693:(e,n,s)=>{s.d(n,{A:()=>a});const a='{\n  "type_args": ["0x1::account::Account", "0x1::chain_id::ChainId"],\n  "args": [\n    {\n      "type": "u8",\n      "value": 123\n    },\n    {\n      "type": "hex",\n      "value": "0x1234"\n    },\n    {\n      "type": "string",\n      "value": "hello, world! \u2665"\n    },\n    {\n      "type": "u8",\n      "value": [122, 123, 124, 125]\n    },\n    {\n      "type": "address",\n      "value": "0xace"\n    }\n  ]\n}\n'},41987:(e,n,s)=>{s.d(n,{A:()=>a});const a='{\n  "function_id": "<test_account>::cli_args::reveal",\n  "type_args": ["0x1::account::Account", "0x1::account::Account"],\n  "args": [\n    {\n      "type": "address",\n      "value": "<test_account>"\n    }\n  ]\n}\n'}}]);