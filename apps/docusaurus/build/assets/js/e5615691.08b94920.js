"use strict";(self.webpackChunkaptos_docs=self.webpackChunkaptos_docs||[]).push([[362],{39313:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var r=o(63159),t=o(83581);const s={title:"Using GCP",slug:"run-validator-node-using-gcp"},i="Using GCP",a={id:"nodes/validator-node/operator/running-validator-node/using-gcp",title:"Using GCP",description:"This is a step-by-step guide to deploy an Aptos validator and validator fullnode (VFN) using Google Cloud Platform Services (GCP).",source:"@site/i18n/ja/docusaurus-plugin-content-docs/current/nodes/validator-node/operator/running-validator-node/using-gcp.md",sourceDirName:"nodes/validator-node/operator/running-validator-node",slug:"/nodes/validator-node/operator/running-validator-node/run-validator-node-using-gcp",permalink:"/nodes/validator-node/operator/running-validator-node/run-validator-node-using-gcp",draft:!1,unlisted:!1,editUrl:"https://github.com/aptos-labs/developer-docs/edit/main/apps/docusaurus/docs/nodes/validator-node/operator/running-validator-node/using-gcp.md",tags:[],version:"current",lastUpdatedAt:1713276994,formattedLastUpdatedAt:"2024\u5e744\u670816\u65e5",frontMatter:{title:"Using GCP",slug:"run-validator-node-using-gcp"},sidebar:"nodeSidebar",previous:{title:"Using Azure",permalink:"/nodes/validator-node/operator/running-validator-node/run-validator-node-using-azure"},next:{title:"Connect Nodes",permalink:"/nodes/validator-node/operator/connect-nodes/connect-validator-node"}},l={},d=[{value:"Deployment steps",id:"deployment-steps",level:2},{value:"Connecting to the Aptos Network",id:"connecting-to-the-aptos-network",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"using-gcp",children:"Using GCP"}),"\n",(0,r.jsx)(n.p,{children:"This is a step-by-step guide to deploy an Aptos validator and validator fullnode (VFN) using Google Cloud Platform Services (GCP).\nUsing this guide, the validator and VFN will be deployed on separate machines."}),"\n",(0,r.jsx)(n.admonition,{title:"Prerequisites",type:"caution",children:(0,r.jsxs)(n.p,{children:["Before you begin, make sure to read and understand the ",(0,r.jsx)(n.a,{href:"/nodes/validator-node/operator/node-requirements",children:"Node Requirements"}),". Similarly, make sure you have\ninstalled the ",(0,r.jsx)(n.a,{href:"https://aptos.dev/tools/aptos-cli/install-cli/index",children:"Aptos CLI"}),",\n",(0,r.jsx)(n.a,{href:"https://www.terraform.io/downloads.html",children:"Terraform"}),",\n",(0,r.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/tools/",children:"Kubernetes CLI"}),",\nand ",(0,r.jsx)(n.a,{href:"https://cloud.google.com/sdk/docs/install-sdk",children:"Google Cloud CLI"}),". This guide assumes that you already have a GCP\naccount setup, and have created a new project for deploying your nodes."]})}),"\n",(0,r.jsx)(n.h2,{id:"deployment-steps",children:"Deployment steps"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Create a working directory for your Aptos nodes, and pick a username for your nodes, e.g.,"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"export WORKSPACE=mainnet\nexport USERNAME=alice\nmkdir ~/$WORKSPACE\ncd ~/$WORKSPACE\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Create a storage bucket for storing the Terraform state on Google Cloud Storage."}),"\n",(0,r.jsx)(n.admonition,{title:"Storage bucket name",type:"caution",children:(0,r.jsxs)(n.p,{children:["The name of the Google Cloud storage bucket must be unique.\nSee the Google Cloud Storage documentation, ",(0,r.jsx)(n.a,{href:"https://cloud.google.com/storage/docs/creating-buckets#prereq-cli",children:"here"}),"."]})}),"\n",(0,r.jsx)(n.p,{children:"Use the GCP UI or Google Cloud Storage command to create the bucket:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"gsutil mb gs://BUCKET_NAME\n\n# Here's an example of creating a bucket\ngsutil mb gs://<project-name>-aptos-terraform-dev\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Create a Terraform file called ",(0,r.jsx)(n.code,{children:"main.tf"})," in your working directory:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd ~/$WORKSPACE\nvi main.tf\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Modify the ",(0,r.jsx)(n.code,{children:"main.tf"})," file to configure Terraform and create the Terraform module. See the example below:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'terraform {\n  required_version = "~> 1.3.6"\n  backend "gcs" {\n    bucket = "BUCKET_NAME" # The bucket name created above\n    prefix = "state/aptos-node"\n  }\n}\n\nmodule "aptos-node" {\n  # Download the Terraform module from the aptos-core repository.\n  source        = "github.com/aptos-labs/aptos-core.git//terraform/aptos-node/gcp?ref=mainnet"\n  region        = "us-central1"  # Specify the GCP region\n  zone          = "c"            # Specify the zone suffix\n  project       = "<GCP Project ID>" # Specify your GCP project ID\n  era           = 1  # Bump the era number to wipe the chain data\n  chain_id      = 1  # Use 1 for mainnet, or different values for other networks.\n  image_tag     = "mainnet" # Specify the image tag to use based on the network\n  validator_name = "<Name of your validator>" # Specify the name of your validator\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"For all customization options, see:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The Terraform variables: ",(0,r.jsx)(n.a,{href:"https://github.com/aptos-labs/aptos-core/blob/main/terraform/aptos-node/aws/variables.tf",children:"https://github.com/aptos-labs/aptos-core/blob/main/terraform/aptos-node/aws/variables.tf"})]}),"\n",(0,r.jsxs)(n.li,{children:["The Helm values: ",(0,r.jsx)(n.a,{href:"https://github.com/aptos-labs/aptos-core/blob/main/terraform/helm/aptos-node/values.yaml",children:"https://github.com/aptos-labs/aptos-core/blob/main/terraform/helm/aptos-node/values.yaml"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Initialize Terraform in the ",(0,r.jsx)(n.code,{children:"$WORKSPACE"})," directory where you created the ",(0,r.jsx)(n.code,{children:"main.tf"})," file."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"terraform init\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This will download all the Terraform dependencies into the ",(0,r.jsx)(n.code,{children:".terraform"})," folder in your current working directory."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Create a new Terraform workspace to isolate your environments, and see the list of workspaces."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"terraform workspace new $WORKSPACE\n\n# This command will list all workspaces\nterraform workspace list\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Apply the Terraform configuration."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"terraform apply\n"})}),"\n",(0,r.jsx)(n.p,{children:"This may take a while to finish (e.g., >20 minutes). Terraform will create all the resources on your cloud account."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["After ",(0,r.jsx)(n.code,{children:"terraform apply"})," finishes, you can check if the resources have been created correctly, by running the following commands:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"gcloud container clusters get-credentials aptos-$WORKSPACE --zone <region/zone> --project <project>"}),": This command will configure access for your k8s cluster."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"kubectl get pods"}),": This command will output all pods in the cluster. You should see haproxy, the\nvalidator and the VFN (with the validator and VFN pod ",(0,r.jsx)(n.code,{children:"pending"})," due to further action in later steps)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"kubectl get svc"}),": This command will output all services in the cluster. You should see the\n",(0,r.jsx)(n.code,{children:"validator-lb"})," and ",(0,r.jsx)(n.code,{children:"fullnode-lb"}),", with an external IP for network connectivity."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Next, we need to inject your node's IP information into your environment. You can do this by running the following commands:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"export VALIDATOR_ADDRESS=\"$(kubectl get svc ${WORKSPACE}-aptos-node-0-validator-lb --output jsonpath='{.status.loadBalancer.ingress[0].hostname}')\"\n\nexport FULLNODE_ADDRESS=\"$(kubectl get svc ${WORKSPACE}-aptos-node-0-fullnode-lb --output jsonpath='{.status.loadBalancer.ingress[0].hostname}')\"\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Now, generate the key pairs for your nodes in your working directory. You can do this by running\nthe following command with the Aptos CLI:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"aptos genesis generate-keys --output-dir ~/$WORKSPACE/keys\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This will create 4 key files under ",(0,r.jsx)(n.code,{children:"~/$WORKSPACE/keys"})," directory:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"public-keys.yaml"}),": This file contains all public keys for your validator and VFN, as well as your account address."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"private-keys.yaml"}),": This file contains all private keys for your validator and VFN."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"validator-identity.yaml"}),": This file contains the public and private keys for your validator, as well as your account address."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"validator-full-node-identity.yaml"}),": This file contains the public and private keys for your VFN, as well as your account address."]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{title:"Backup your private keys",type:"danger",children:(0,r.jsxs)(n.p,{children:["Your private keys are important for you to establish ownership of your nodes. Never share your ",(0,r.jsx)(n.strong,{children:"private"})," keys with anyone,\nand make sure to ",(0,r.jsx)(n.strong,{children:"backup"})," ",(0,r.jsx)(n.code,{children:"private-keys.yaml"})," somewhere safe."]})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Next, you will need to set your validator configuration. This includes setting the validator and VFN host names,\nwhich may be IP addresses or DNS addresses. This can be done by running the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"aptos genesis set-validator-configuration \\\n  --local-repository-dir ~/$WORKSPACE \\\n  --username $USERNAME \\\n  --owner-public-identity-file ~/$WORKSPACE/keys/public-keys.yaml \\\n  --validator-host $VALIDATOR_ADDRESS:6180 \\\n  --full-node-host $FULLNODE_ADDRESS:6182 \\\n  --stake-amount 100000000000000\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Configuring the validator will create two YAML files in the ",(0,r.jsx)(n.code,{children:"~/$WORKSPACE/$USERNAME"})," directory: ",(0,r.jsx)(n.code,{children:"owner.yaml"})," and\n",(0,r.jsx)(n.code,{children:"operator.yaml"}),". These will be useful for connecting your nodes to the Aptos network (later)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Download the following files by following the instructions on the ",(0,r.jsx)(n.a,{href:"/nodes/node-files-all-networks/node-files-index",children:"Node Files"})," pages.\nYou will need to select the appropriate network (e.g., ",(0,r.jsx)(n.code,{children:"mainnet"}),", ",(0,r.jsx)(n.code,{children:"testnet"}),", ",(0,r.jsx)(n.code,{children:"devnet"}),") and download the following files:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"genesis.blob"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"waypoint.txt"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["To recap, in your working directory (",(0,r.jsx)(n.code,{children:"~/$WORKSPACE"}),"), you should have a list of files:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"main.tf"}),": The Terraform files to install the ",(0,r.jsx)(n.code,{children:"aptos-node"})," module."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"keys"})," folder containing:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"public-keys.yaml"}),": Public keys for both nodes."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"private-keys.yaml"}),": Private keys for both nodes."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"validator-identity.yaml"}),": Key and account information for the validator."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"validator-full-node-identity.yaml"}),": Key and account information for the VFN."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"$username"})," folder containing:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"owner.yaml"}),": The owner, operator and voter mappings."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"operator.yaml"}),": Validator and VFN operator information."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"waypoint.txt"}),": The waypoint for the genesis transaction on the network you are connecting to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"genesis.blob"})," The genesis blob for the network you are connecting to."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Finally, insert the ",(0,r.jsx)(n.code,{children:"genesis.blob"}),", ",(0,r.jsx)(n.code,{children:"waypoint.txt"})," and the identity files as secrets into the k8s cluster,\nby running the following command:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl create secret generic ${WORKSPACE}-aptos-node-0-genesis-e1 \\\n    --from-file=genesis.blob=genesis.blob \\\n    --from-file=waypoint.txt=waypoint.txt \\\n    --from-file=validator-identity.yaml=keys/validator-identity.yaml \\\n    --from-file=validator-full-node-identity.yaml=keys/validator-full-node-identity.yaml\n"})}),"\n",(0,r.jsxs)(n.admonition,{title:"Era numbers and dangling volumes",type:"danger",children:[(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"-e1"})," suffix in the command above refers to the era number. If you changed the ",(0,r.jsx)(n.code,{children:"era"})," number, make sure it matches\nwhen creating the secrets."]}),(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"era"})," is a concept relevant only to Kubernetes deployments of an Aptos node.\nChanging the ",(0,r.jsx)(n.code,{children:"era"})," provides an easy way to wipe your deployment's state (e.g., blockchain data). However, this may\nlead to dangling persistent volumes. Confirm the existence of any dangling volumes with ",(0,r.jsx)(n.code,{children:"kubectl get pvc"}),"\nand delete any dangling volumes manually to minimize costs."]})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Now, we should be able to see that all pods are running, including the validator and VFN. You can check this by\nexecuting the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl get pods\n\n# Example output\nNAME                                        READY   STATUS    RESTARTS   AGE\nnode1-aptos-node-0-fullnode-e9-0              1/1     Running   0          4h31m\nnode1-aptos-node-0-haproxy-7cc4c5f74c-l4l6n   1/1     Running   0          4h40m\nnode1-aptos-node-0-validator-0                1/1     Running   0          4h30m\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{title:"Next steps",type:"caution",children:(0,r.jsx)(n.p,{children:"You have now completed setting up your validator and VFN using GCP. However, your nodes will not be able to connect\nto the Aptos network just yet."})}),"\n",(0,r.jsx)(n.h2,{id:"connecting-to-the-aptos-network",children:"Connecting to the Aptos Network"}),"\n",(0,r.jsxs)(n.p,{children:["You have now completed setting up your validator and VFN using AWS. Proceed to ",(0,r.jsx)(n.a,{href:"/nodes/validator-node/operator/connect-nodes/connect-validator-node",children:"Connect Nodes"})," for the next steps."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},83581:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>a});var r=o(11855);const t={},s=r.createContext(t);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);