"use strict";(self.webpackChunkaptos_docs=self.webpackChunkaptos_docs||[]).push([[641],{8557:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var n=i(63159),t=i(83581);const r={title:"Move Types"},o="TS SDK Move Types",l={id:"sdks/ts-sdk/move-types",title:"Move Types",description:"When developing on Aptos, and specifically working with the SDK, developers often need to handle Move types serialization and deserialization. Whether is to construct a transaction payload, build a raw transaction or read BCS data.",source:"@site/i18n/ja/docusaurus-plugin-content-docs/current/sdks/ts-sdk/move-types.md",sourceDirName:"sdks/ts-sdk",slug:"/sdks/ts-sdk/move-types",permalink:"/sdks/ts-sdk/move-types",draft:!1,unlisted:!1,editUrl:"https://github.com/aptos-labs/developer-docs/edit/main/apps/docusaurus/docs/sdks/ts-sdk/move-types.md",tags:[],version:"current",lastUpdatedAt:1713276994,formattedLastUpdatedAt:"2024\u5e744\u670816\u65e5",frontMatter:{title:"Move Types"},sidebar:"appSidebar",previous:{title:"HTTP Client",permalink:"/sdks/ts-sdk/http-client"},next:{title:"Testing",permalink:"/sdks/ts-sdk/testing"}},a={},d=[{value:"Move primitive types",id:"move-primitive-types",level:2},{value:"Move struct types",id:"move-struct-types",level:2}];function c(e){const s={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"ts-sdk-move-types",children:"TS SDK Move Types"}),"\n",(0,n.jsx)(s.p,{children:"When developing on Aptos, and specifically working with the SDK, developers often need to handle Move types serialization and deserialization. Whether is to construct a transaction payload, build a raw transaction or read BCS data."}),"\n",(0,n.jsxs)(s.p,{children:["The SDK provides a convenient Move subclasses to easily interact with move types to perform serialization or deserialization operations.\nEach class has a ",(0,n.jsx)(s.code,{children:"serialize"}),", ",(0,n.jsx)(s.code,{children:"serializeForEntryFunction"})," and ",(0,n.jsx)(s.code,{children:"serializeForScriptFunction"})," methods and a ",(0,n.jsx)(s.code,{children:"deserialize"})," static class."]}),"\n",(0,n.jsxs)(s.p,{children:["In addition, for complex types like ",(0,n.jsx)(s.code,{children:"Vector"})," the SDK supports nested serialization and deserialization."]}),"\n",(0,n.jsx)(s.h2,{id:"move-primitive-types",children:"Move primitive types"}),"\n",(0,n.jsx)(s.p,{children:"Classes to handle Move primitive types:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"U8"}),"\n",(0,n.jsx)(s.li,{children:"U16"}),"\n",(0,n.jsx)(s.li,{children:"U32"}),"\n",(0,n.jsx)(s.li,{children:"U64"}),"\n",(0,n.jsx)(s.li,{children:"U128"}),"\n",(0,n.jsx)(s.li,{children:"U256"}),"\n",(0,n.jsx)(s.li,{children:"Bool"}),"\n",(0,n.jsx)(s.li,{children:"AccountAddress"}),"\n"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:"const serializer = new Serializer();\n\nconst u8 = new U8(1);\nu8.serialize(serializer);\nu8.serializeForEntryFunction(serializer);\nu8.serializeForScriptFunction(serializer);\n\nconst deserializer = new Deserializer();\nU8.deserialize(deserializer);\n"})}),"\n",(0,n.jsx)(s.h2,{id:"move-struct-types",children:"Move struct types"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"MoveVector"}),"\n",(0,n.jsx)(s.li,{children:"MoveString"}),"\n",(0,n.jsx)(s.li,{children:"MoveOption"}),"\n"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:'const serializer = new Serializer();\n\nconst moveString = new MoveString("hello world");\nmoveString.serialize(serializer);\nmoveString.serializeForEntryFunction(serializer);\nmoveString.serializeForScriptFunction(serializer);\n\nconst deserializer = new Deserializer();\nMoveString.deserialize(deserializer);\n'})})]})}function p(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},83581:(e,s,i)=>{i.d(s,{R:()=>o,x:()=>l});var n=i(11855);const t={},r=n.createContext(t);function o(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);