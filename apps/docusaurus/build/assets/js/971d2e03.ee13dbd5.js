"use strict";(self.webpackChunkaptos_docs=self.webpackChunkaptos_docs||[]).push([[8204],{73730:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>a});var s=n(63159),i=n(83581);const o={title:"HTTP Client"},r="TS SDK HTTP Client",l={id:"sdks/ts-sdk/http-client",title:"HTTP Client",description:"Default HTTP Client",source:"@site/i18n/ja/docusaurus-plugin-content-docs/current/sdks/ts-sdk/http-client.md",sourceDirName:"sdks/ts-sdk",slug:"/sdks/ts-sdk/http-client",permalink:"/sdks/ts-sdk/http-client",draft:!1,unlisted:!1,editUrl:"https://github.com/aptos-labs/developer-docs/edit/main/apps/docusaurus/docs/sdks/ts-sdk/http-client.md",tags:[],version:"current",lastUpdatedAt:1713276994,formattedLastUpdatedAt:"2024\u5e744\u670816\u65e5",frontMatter:{title:"HTTP Client"},sidebar:"appSidebar",previous:{title:"Transaction Builder",permalink:"/sdks/ts-sdk/transaction-builder"},next:{title:"Move Types",permalink:"/sdks/ts-sdk/move-types"}},c={},a=[{value:"Default HTTP Client",id:"default-http-client",level:2},{value:"Custom HTTP Client",id:"custom-http-client",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"ts-sdk-http-client",children:"TS SDK HTTP Client"}),"\n",(0,s.jsx)(t.h2,{id:"default-http-client",children:"Default HTTP Client"}),"\n",(0,s.jsxs)(t.p,{children:["The SDK uses ",(0,s.jsx)(t.a,{href:"https://www.npmjs.com/package/@aptos-labs/aptos-client",children:"@aptos-labs/aptos-client"})," library with the ability to modify some request configurations like AUTH_TOKEN, HEADERS, etc."]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"@aptos-labs/aptos-client"})," package supports ",(0,s.jsx)(t.code,{children:"http2"})," protocol and implements 2 clients environment based:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"axios"})," - To use in a browser environment (in a browser env it is up to the browser and the server to negotiate http2 connection)"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"got"})," - To use in a node environment (to support http2 in node environment, still the server must support http2 also)"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"custom-http-client",children:"Custom HTTP Client"}),"\n",(0,s.jsx)(t.p,{children:"Sometimes developers want to set custom configurations or use a specific http client for queries."}),"\n",(0,s.jsx)(t.p,{children:"The SDK supports a custom client configuration as a function with this signature:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"<Req, Res>(requestOptions: ClientRequest<Req>): Promise<ClientResponse<Res>>\n"})}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["Both ",(0,s.jsx)(t.code,{children:"ClientRequest"})," and ",(0,s.jsx)(t.code,{children:"ClientResponse"})," are types defined in the SDK."]})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"async function customClient<Req, Res>(requestOptions: ClientRequest<Req>): Promise<ClientResponse<Res>> {\n  ....\n}\n\nconst config = new AptosConfig({ client: { provider: customClient } });\nconst aptos = new Aptos(config);\n"})})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},83581:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var s=n(11855);const i={},o=s.createContext(i);function r(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);