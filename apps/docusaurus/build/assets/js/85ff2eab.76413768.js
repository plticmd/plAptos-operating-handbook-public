"use strict";(self.webpackChunkaptos_docs=self.webpackChunkaptos_docs||[]).push([[7640],{44285:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var a=t(63159),i=t(83581);const s={title:"Key",id:"cli-key"},c=void 0,o={id:"tools/aptos-cli/use-cli/cli-key",title:"Key",description:"Key examples",source:"@site/i18n/ja/docusaurus-plugin-content-docs/current/tools/aptos-cli/use-cli/cli-key.md",sourceDirName:"tools/aptos-cli/use-cli",slug:"/tools/aptos-cli/use-cli/cli-key",permalink:"/tools/aptos-cli/use-cli/cli-key",draft:!1,unlisted:!1,editUrl:"https://github.com/aptos-labs/developer-docs/edit/main/apps/docusaurus/docs/tools/aptos-cli/use-cli/cli-key.md",tags:[],version:"current",lastUpdatedAt:1713276994,formattedLastUpdatedAt:"2024\u5e744\u670816\u65e5",frontMatter:{title:"Key",id:"cli-key"},sidebar:"appSidebar",previous:{title:"Account",permalink:"/tools/aptos-cli/use-cli/cli-account"},next:{title:"Node",permalink:"/tools/aptos-cli/use-cli/cli-node"}},r={},l=[{value:"Key examples",id:"key-examples",level:2},{value:"Generating a key",id:"generating-a-key",level:3},{value:"Generating a vanity prefix key",id:"generating-a-vanity-prefix-key",level:3},{value:"Generating a peer config",id:"generating-a-peer-config",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"key-examples",children:"Key examples"}),"\n",(0,a.jsx)(n.h3,{id:"generating-a-key",children:"Generating a key"}),"\n",(0,a.jsxs)(n.p,{children:["To allow generating private keys, you can use the ",(0,a.jsx)(n.code,{children:"aptos key generate"})," command. You can generate\neither ",(0,a.jsx)(n.code,{children:"x25519"})," or ",(0,a.jsx)(n.code,{children:"ed25519"})," keys."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'$ aptos key generate --key-type ed25519 --output-file output.key\n{\n  "Result": {\n    "PrivateKey Path": "output.key",\n    "PublicKey Path": "output.key.pub"\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"generating-a-vanity-prefix-key",children:"Generating a vanity prefix key"}),"\n",(0,a.jsxs)(n.p,{children:["If you are generating an ",(0,a.jsx)(n.code,{children:"ed25519"})," key, you can optionally supply a vanity prefix for the corresponding account address:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'$ aptos key generate --output-file starts_with_ace.key --vanity-prefix 0xace\n{\n  "Result": {\n    "PrivateKey Path": "starts_with_ace.key",\n    "PublicKey Path": "starts_with_ace.key.pub",\n    "Account Address:": "0xaceffa015e51dcd32c34794c143e19185b3f1be5464dd6184239a37e57e72ea3"\n  }\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"This works for multisig accounts too:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'% aptos key generate --output-file starts_with_bee.key --vanity-prefix 0xbee --vanity-multisig\n{\n  "Result": {\n    "PrivateKey Path": "starts_with_bee.key",\n    "PublicKey Path": "starts_with_bee.key.pub",\n    "Account Address:": "0x384cf987aab625f9727684d4dda8de668abedc18aa8dceabd7651a1cfb69196f",\n    "Multisig Account Address:": "0xbee0797c577428249125f6ed7f4a2a5939ddc34389294bd9f5d1627508832f56"\n  }\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Note the vanity flag documentation from the ",(0,a.jsx)(n.code,{children:"aptos key generate"})," help:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"--vanity-multisig\n    Use this flag when vanity prefix is for a multisig account. This mines a private key for\n    a single signer account that can, as its first transaction, create a multisig account\n    with the given vanity prefix\n\n--vanity-prefix <VANITY_PREFIX>\n    Vanity prefix that resultant account address should start with, e.g. 0xaceface or d00d.\n    Each additional character multiplies by a factor of 16 the computational difficulty\n    associated with generating an address, so try out shorter prefixes first and be prepared\n    to wait for longer ones\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["If you want even faster vanity address generation for long prefixes, try out the parallelism-optimized ",(0,a.jsx)(n.a,{href:"https://github.com/econia-labs/optivanity",children:(0,a.jsx)(n.code,{children:"optivanity"})})," tool from ",(0,a.jsx)(n.a,{href:"https://www.econialabs.com/",children:"Econia Labs"})]})}),"\n",(0,a.jsx)(n.h3,{id:"generating-a-peer-config",children:"Generating a peer config"}),"\n",(0,a.jsxs)(n.p,{children:["To allow others to connect to your node, you need to generate a peer configuration. Below command shows how you can use\nthe ",(0,a.jsx)(n.code,{children:"aptos"})," CLI to generate a peer configuration and write it into a file named ",(0,a.jsx)(n.code,{children:"peer_config.yaml"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ aptos key extract-peer --output-file peer_config.yaml\n"})}),"\n",(0,a.jsx)(n.p,{children:"The above command will generate the following output on the terminal:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": {\n    "8cfb85603080b13013b57e2e80887c695cfecd7ad8217d1cac22fa6f3b0b5752": {\n      "addresses": [],\n      "keys": [\n        "0x8cfb85603080b13013b57e2e80887c695cfecd7ad8217d1cac22fa6f3b0b5752"\n      ],\n      "role": "Upstream"\n    }\n  }\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"peer_config.yaml"})," file will be created in your current working directory, with the contents as shown in the below example:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'---\n8cfb85603080b13013b57e2e80887c695cfecd7ad8217d1cac22fa6f3b0b5752:\n  addresses: []\n  keys:\n    - "0x8cfb85603080b13013b57e2e80887c695cfecd7ad8217d1cac22fa6f3b0b5752"\n  role: Upstream\n'})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Note:"})," In the addresses key, you should fill in your address."]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},83581:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>o});var a=t(11855);const i={},s=a.createContext(i);function c(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);