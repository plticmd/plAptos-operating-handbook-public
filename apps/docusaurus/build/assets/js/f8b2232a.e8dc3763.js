"use strict";(self.webpackChunkaptos_docs=self.webpackChunkaptos_docs||[]).push([[9407],{89129:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>r});var t=o(63159),i=o(83581);const a={title:"Use the Aptos CLI",id:"use-aptos-cli"},s="Use the Aptos CLI",l={id:"tools/aptos-cli/use-cli/use-aptos-cli",title:"Use the Aptos CLI",description:"The aptos tool is a command line interface (CLI) for developing on the Aptos blockchain, debugging, and for node operations. This document describes how to use the aptos CLI tool. To download or build the CLI, follow Install Aptos CLI.",source:"@site/i18n/ja/docusaurus-plugin-content-docs/current/tools/aptos-cli/use-cli/use-aptos-cli.md",sourceDirName:"tools/aptos-cli/use-cli",slug:"/tools/aptos-cli/use-cli/use-aptos-cli",permalink:"/tools/aptos-cli/use-cli/use-aptos-cli",draft:!1,unlisted:!1,editUrl:"https://github.com/aptos-labs/developer-docs/edit/main/apps/docusaurus/docs/tools/aptos-cli/use-cli/use-aptos-cli.md",tags:[],version:"current",lastUpdatedAt:1713276994,formattedLastUpdatedAt:"2024\u5e744\u670816\u65e5",frontMatter:{title:"Use the Aptos CLI",id:"use-aptos-cli"},sidebar:"appSidebar",previous:{title:"Install the Move Prover",permalink:"/tools/aptos-cli/install-cli/install-move-prover"},next:{title:"Configuration",permalink:"/tools/aptos-cli/use-cli/cli-configuration"}},c={},r=[{value:"Command line help",id:"command-line-help",level:2},{value:"Command-specific help",id:"command-specific-help",level:3},{value:"Sub-command help",id:"sub-command-help",level:3},{value:"CLI information",id:"cli-information",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"use-the-aptos-cli",children:"Use the Aptos CLI"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"aptos"})," tool is a command line interface (CLI) for developing on the Aptos blockchain, debugging, and for node operations. This document describes how to use the ",(0,t.jsx)(n.code,{children:"aptos"})," CLI tool. To download or build the CLI, follow ",(0,t.jsx)(n.a,{href:"/tools/aptos-cli/install-cli/",children:"Install Aptos CLI"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"For example on how to use specific commands, see the following documents:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/tools/aptos-cli/use-cli/cli-configuration",children:"Configuration and Initialization"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/tools/aptos-cli/use-cli/cli-account",children:"Account"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/tools/aptos-cli/use-cli/cli-key",children:"Key"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/tools/aptos-cli/use-cli/cli-node",children:"Node"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/move/move-on-aptos/cli",children:"Move"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/tools/aptos-cli/use-cli/cli-genesis",children:"Genesis"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"command-line-help",children:"Command line help"}),"\n",(0,t.jsxs)(n.p,{children:["Command line help is available. Type ",(0,t.jsx)(n.code,{children:"aptos help"})," or ",(0,t.jsx)(n.code,{children:"aptos --help"})," to see the available command options. See below the usage output from ",(0,t.jsx)(n.code,{children:"aptos --help"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"USAGE:\n    aptos <SUBCOMMAND>\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\nSUBCOMMANDS:\n    account       Tool for interacting with accounts\n    config        Tool for interacting with configuration of the Aptos CLI tool\n    genesis       Tool for setting up an Aptos chain Genesis transaction\n    governance    Tool for on-chain governance\n    help          Print this message or the help of the given subcommand(s)\n    info          Show build information about the CLI\n    init          Tool to initialize current directory for the aptos tool\n    key           Tool for generating, inspecting, and interacting with keys\n    move          Tool for Move related operations\n    multisig      Tool for interacting with multisig accounts\n    node          Tool for operations related to nodes\n    stake         Tool for manipulating stake and stake pools\n    update        Update the CLI itself\n"})}),"\n",(0,t.jsx)(n.h3,{id:"command-specific-help",children:"Command-specific help"}),"\n",(0,t.jsxs)(n.p,{children:["Command-specific help is also available. For example, see below the usage output from ",(0,t.jsx)(n.code,{children:"aptos move --help"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"\nUSAGE:\n    aptos move <SUBCOMMAND>\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\nSUBCOMMANDS:\n    build-publish-payload\n            Build a publication transaction payload and store it in a JSON output file\n    clean\n            Cleans derived artifacts of a package\n    compile\n            Compiles a package and returns the associated ModuleIds\n    compile-script\n            Compiles a Move script into bytecode\n    coverage\n            Computes coverage for a package\n    create-resource-account-and-publish-package\n            Publishes the modules in a Move package to the Aptos blockchain under a resource account\n    disassemble\n            Disassemble the Move bytecode pointed to\n    document\n            Documents a Move package\n    download\n            Downloads a package and stores it in a directory named after the package\n    help\n            Print this message or the help of the given subcommand(s)\n    init\n            Creates a new Move package at the given location\n    list\n            Lists information about packages and modules on-chain for an account\n    prove\n            Proves a Move package\n    publish\n            Publishes the modules in a Move package to the Aptos blockchain\n    run\n            Run a Move function\n    run-script\n            Run a Move script\n    test\n            Runs Move unit tests for a package\n    verify-package\n            Downloads a package and verifies the bytecode\n    view\n            Run a view function\n"})}),"\n",(0,t.jsx)(n.h3,{id:"sub-command-help",children:"Sub-command help"}),"\n",(0,t.jsxs)(n.p,{children:["Help for sub-commands is also available. For example, see below the usage output from ",(0,t.jsx)(n.code,{children:"aptos move compile --help"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"\nUsage: aptos move compile [OPTIONS]\n\nOptions:\n      --save-metadata\n          Save the package metadata in the package's build directory\n\n          If set, package metadata should be generated and stored in the package's build directory. This metadata can be used to construct a transaction to publish a package.\n\n      --included-artifacts <INCLUDED_ARTIFACTS>\n          Artifacts to be generated when building the package\n\n          Which artifacts to include in the package. This can be one of `none`, `sparse`, and `all`. `none` is the most compact form and does not allow to reconstruct a source package from chain; `sparse` is the minimal set of artifacts needed to reconstruct a source package; `all` includes all available artifacts. The choice of included artifacts heavily influences the size and therefore gas cost of publishing: `none` is the size of bytecode alone; `sparse` is roughly 2 times as much; and `all` 3-4 as much.\n\n          [default: sparse]\n          [possible values: none, sparse, all]\n\n      --dev\n          Enables dev mode, which uses all dev-addresses and dev-dependencies\n\n          Dev mode allows for changing dependencies and addresses to the preset [dev-addresses] and [dev-dependencies] fields.  This works both inside and out of tests for using preset values.\n\n          Currently, it also additionally pulls in all test compilation artifacts\n\n      --package-dir <PACKAGE_DIR>\n          Path to a move package (the folder with a Move.toml file)\n\n      --output-dir <OUTPUT_DIR>\n          Path to save the compiled move package\n\n          Defaults to `<package_dir>/build`\n\n      --named-addresses <NAMED_ADDRESSES>\n          Named addresses for the move binary\n\n          Example: alice=0x1234, bob=0x5678\n\n          Note: This will fail if there are duplicates in the Move.toml file remove those first.\n\n          [default: ]\n\n      --skip-fetch-latest-git-deps\n          Skip pulling the latest git dependencies\n\n          If you don't have a network connection, the compiler may fail due to no ability to pull git dependencies.  This will allow overriding this for local development.\n\n      --bytecode-version <BYTECODE_VERSION>\n          Specify the version of the bytecode the compiler is going to emit\n\n      --compiler-version <COMPILER_VERSION>\n          Specify the version of the compiler\n\n          [possible values: v1, v2]\n\n      --skip-attribute-checks\n          Do not complain about unknown attributes in Move code\n\n  -h, --help\n          Print help (see a summary with '-h')\n\n  -V, --version\n          Print version\n"})}),"\n",(0,t.jsx)(n.h2,{id:"cli-information",children:"CLI information"}),"\n",(0,t.jsxs)(n.p,{children:["Run the ",(0,t.jsx)(n.code,{children:"aptos info"})," command to get the CLI information for debugging purposes. See an example output of the ",(0,t.jsx)(n.code,{children:"aptos info"})," command:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'{\n  "Result": {\n    "build_branch": "",\n    "build_cargo_version": "cargo 1.71.2 (1a737af0c 2023-08-07)",\n    "build_clean_checkout": "true",\n    "build_commit_hash": "",\n    "build_is_release_build": "true",\n    "build_os": "macos-aarch64",\n    "build_pkg_version": "2.1.0",\n    "build_profile_name": "cli",\n    "build_rust_channel": "",\n    "build_rust_version": "rustc 1.71.1 (eb26296b5 2023-08-03) (built from a source tarball)",\n    "build_tag": "",\n    "build_time": "2023-08-24 21:13:40 +00:00",\n    "build_using_tokio_unstable": "true"\n  }\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},83581:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>l});var t=o(11855);const i={},a=t.createContext(i);function s(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);