"use strict";(self.webpackChunkaptos_docs=self.webpackChunkaptos_docs||[]).push([[9859],{3389:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var s=n(63159),i=n(83581);const a={title:"AptosClient Class",slug:"typescript-sdk-aptos-client-class"},o=void 0,c={id:"sdks/legacy-ts-sdk/aptos-client",title:"AptosClient Class",description:"The AptosClient class is a component of the Aptos TypeScript SDK that enables developers to interact with the blockchain network through the use of REST APIs generated from an OpenAPI document. The OpenAPI specification helps build and document RESTful APIs by providing a standard format for describing the structure of an API, including the available endpoints, methods, input and output parameters.",source:"@site/i18n/ja/docusaurus-plugin-content-docs/current/sdks/legacy-ts-sdk/aptos-client.md",sourceDirName:"sdks/legacy-ts-sdk",slug:"/sdks/legacy-ts-sdk/typescript-sdk-aptos-client-class",permalink:"/sdks/legacy-ts-sdk/typescript-sdk-aptos-client-class",draft:!1,unlisted:!1,editUrl:"https://github.com/aptos-labs/developer-docs/edit/main/apps/docusaurus/docs/sdks/legacy-ts-sdk/aptos-client.md",tags:[],version:"current",lastUpdatedAt:1713276994,formattedLastUpdatedAt:"2024\u5e744\u670816\u65e5",frontMatter:{title:"AptosClient Class",slug:"typescript-sdk-aptos-client-class"},sidebar:"appSidebar",previous:{title:"API Client Layer",permalink:"/sdks/legacy-ts-sdk/typescript-sdk-client-layer"},next:{title:"IndexerClient Class",permalink:"/sdks/legacy-ts-sdk/typescript-sdk-indexer-client-class"}},r={},l=[{value:"Usage",id:"usage",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Initialization",id:"initialization",level:2},{value:"Making API fetch calls",id:"making-api-fetch-calls",level:2},{value:"Submit transaction to chain",id:"submit-transaction-to-chain",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.a,{href:"https://aptos-labs.github.io/ts-sdk-doc/classes/AptosClient.html",children:"AptosClient"})," class is a component of the Aptos TypeScript SDK that enables developers to interact with the blockchain network through the use of REST APIs generated from an OpenAPI document. The ",(0,s.jsx)(t.a,{href:"https://spec.openapis.org/oas/v3.0.3",children:"OpenAPI specification"})," helps build and document RESTful APIs by providing a standard format for describing the structure of an API, including the available endpoints, methods, input and output parameters."]}),"\n",(0,s.jsxs)(t.p,{children:["In addition, the ",(0,s.jsx)(t.code,{children:"AptosClient"})," component supports submitting transactions in BCS format, which prepares and signs the raw transactions on the client-side. This method leverages the BCS Library or Transaction Builder for constructing the transaction payloads."]}),"\n",(0,s.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(t.p,{children:["To use the ",(0,s.jsx)(t.code,{children:"AptosClient"})," class, you will need to create an instance of ",(0,s.jsx)(t.code,{children:"AptosClient"})," and call the desired API method. The ",(0,s.jsx)(t.code,{children:"AptosClient"})," object will handle the HTTP requests and responses and return the result to your application."]}),"\n",(0,s.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsxs)(t.p,{children:["Before using the ",(0,s.jsx)(t.code,{children:"AptosClient"})," class, you will need to configure it with the necessary parameters. These parameters may include the network endpoint URL, custom configuration, and any other required settings. You can configure the ",(0,s.jsx)(t.code,{children:"AptosClient"})," class by passing in the necessary parameters when you initialize the client object."]}),"\n",(0,s.jsx)(t.h2,{id:"initialization",children:"Initialization"}),"\n",(0,s.jsxs)(t.p,{children:["Here is an example of how to initialize an ",(0,s.jsx)(t.code,{children:"AptosClient"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:'import { AptosClient } from "aptos";\n\nconst client = new AptosClient("https://api.testnet.aptoslabs.com");\n'})}),"\n",(0,s.jsx)(t.h2,{id:"making-api-fetch-calls",children:"Making API fetch calls"}),"\n",(0,s.jsxs)(t.p,{children:["To make an API call, you will need to call the appropriate method on the ",(0,s.jsx)(t.code,{children:"AptosClient"})," object. The method name and parameters will depend on the specific API you are using. Here is an example:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:'const accountResources = await client.getAccountResources("0x123");\n'})}),"\n",(0,s.jsxs)(t.p,{children:["In this example, we are using the ",(0,s.jsx)(t.code,{children:"getAccountResources()"})," method to retrieve the resources of an account with the address ",(0,s.jsx)(t.code,{children:"0x123"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"submit-transaction-to-chain",children:"Submit transaction to chain"}),"\n",(0,s.jsx)(t.p,{children:"To submit a transaction to the blockchain, you will need to build a transaction payload to be submitted. Here is an example:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:'const alice = new AptosAccount();\n\nconst payload: Types.EntryFunctionPayload = {\n  function: "0x123::todolist::create_task",\n  type_arguments: [],\n  arguments: ["read aptos.dev"],\n};\n\nconst rawTxn = await client.generateTransaction(alice.address(), payload);\nconst bcsTxn = AptosClient.generateBCSTransaction(alice, rawTxn);\nconst transactionRes = await client.submitSignedBCSTransaction(bcsTxn);\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Transaction payload contents:\n",(0,s.jsx)(t.code,{children:"function"})," \u2013 This must be a fully qualified function name and composed of ",(0,s.jsx)(t.code,{children:"module address"}),", ",(0,s.jsx)(t.code,{children:"module name"})," and ",(0,s.jsx)(t.code,{children:"function name"})," separated by ",(0,s.jsx)(t.code,{children:"::"}),".\n",(0,s.jsx)(t.code,{children:"type_arguments"})," \u2013 This is for the case a Move function expects a generic type argument.\n",(0,s.jsx)(t.code,{children:"arguments"})," \u2013 The arguments the function expects."]}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsxs)(t.p,{children:["You can use the ",(0,s.jsx)(t.code,{children:"AptosClient"})," class directly or the ",(0,s.jsx)(t.a,{href:"/sdks/legacy-ts-sdk/typescript-sdk-client-layer",children:"Provider"})," class (preferred)."]})})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},83581:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var s=n(11855);const i={},a=s.createContext(i);function o(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);